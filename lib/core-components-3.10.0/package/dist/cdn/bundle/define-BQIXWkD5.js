"use strict";var e=require("@saffron/config"),t=require("tslib"),s=require("./fast-element-DOTfrYFb.js"),i=require("./apply-mixins-CewQe2EQ.js");const r="horizontal";class a extends s.FASTElement{constructor(){super(...arguments),this._mode="mobile"}createResizeObserver(e){const{threshold:t=5,breakpoint:s=480}=null!=e?e:{};let i=0;return new ResizeObserver(e=>{const r=e[0];if(Math.abs(r.contentRect.width-i)>t){const e=r.contentRect.width<s;this._mode=e?"mobile":"desktop",i=r.contentRect.width}})}get mode(){return this._mode}set mode(e){throw new Error("mode is read-only")}initializeResponsiveness(e){setTimeout(()=>{var t,s;this.resizeObserver=this.createResizeObserver(e),null===(t=this.resizeObserver)||void 0===t||t.observe(this.parentElement),this._mode=this.parentElement.getBoundingClientRect().width<(null!==(s=null==e?void 0:e.breakpoint)&&void 0!==s?s:480)?"mobile":"desktop",this._modeChanged=(e,t)=>{this.$emit("mode-change",t)}})}disconnectResizeObserver(){setTimeout(()=>{var e;null===(e=this.resizeObserver)||void 0===e||e.disconnect()})}}t.__decorate([s.observable],a.prototype,"_mode",void 0);class o extends s.FASTElement{constructor(){super(...arguments),this.orientation=r,this.observeResize=!0,this.activeStep=0,this.steps=[]}observeResizeChanged(e,t){e&&this.disconnectResizeObserver(),t&&this.initializeResponsiveness({threshold:20,breakpoint:768})}activeStepChanged(){this.$emit("step-change",this.activeStep)}findSteps(){const t=this.querySelectorAll(e.getComponentName("saf-step"));this.steps=Array.from(t),this.steps.forEach((e,t)=>{this.addOrientationClass(e),this.updateStepNumbers(e,t),t===this.steps.length-1&&e.classList.add("last")})}updateStepNumbers(e,t){e.stepNumber=t+1,e.totalSteps=this.steps.length}addOrientationClass(e){e.classList.remove("vertical","horizontal"),e.classList.add("vertical"===this.orientation?"vertical":"horizontal")}updateStepper(e){this.activeStep=e,this.updateStepStatus()}updateStepStatus(){this.steps.forEach((e,t)=>{t<this.activeStep?e.status="completed":t===this.activeStep?e.status="active":e.status="inactive"})}connectedCallback(){super.connectedCallback(),setTimeout(()=>this.findSteps()),this.addEventListener("mode-change",e=>{this.orientation="mobile"===e.detail?"vertical":"horizontal"})}disconnectedCallback(){super.disconnectedCallback(),this.disconnectResizeObserver()}}t.__decorate([s.attr],o.prototype,"orientation",void 0),t.__decorate([s.attr({attribute:"aria-label"})],o.prototype,"ariaLabel",void 0),t.__decorate([s.attr({attribute:"observe-resize",mode:"boolean"})],o.prototype,"observeResize",void 0),t.__decorate([s.attr({attribute:"active-step"})],o.prototype,"activeStep",void 0),i.applyMixins(o,a);exports.ResponsiveElement=a,exports.SafStepper=()=>o.define({name:e.getComponentName("saf-stepper"),template:s.html`
	<template
		role="list"
		orientation="${e=>e.orientation}"
		observe-resize="${e=>e.observeResize}"
		aria-label="${e=>{var t;return null!==(t=e.ariaLabel)&&void 0!==t?t:"progress"}}"
		class="list ${e=>e.orientation}"
		part="list"
		@updateStepper="${(e,t)=>e.updateStepper(t.event.detail)}"
	>
		<slot></slot>
	</template>
`,styles:s.css`
	${e.replaceComponentNamesWithSafAttribute(":host{margin:0;padding:0}:host(.horizontal){display:flex;gap:var(--saf-spacing-2)}:host(.vertical){display:inline-flex;flex-direction:column}")}
`,registry:e.getRegistry()}),exports.Stepper=o,exports.safStepperConfig={events:{updateStepper:"update-stepper",onStepChange:"step-change"}};
