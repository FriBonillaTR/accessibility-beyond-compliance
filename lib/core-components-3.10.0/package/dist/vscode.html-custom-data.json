{
  "$schema": "https://raw.githubusercontent.com/microsoft/vscode-html-languageservice/main/docs/customData.schema.json",
  "version": 1.1,
  "tags": [
    {
      "name": "saf-saf-a11y",
      "description": "Main accessibility service. Usage examples:\n\n// Queue a screen reader announcement\nSafA11y.announce('My message');\n\n// Trigger an immediate screen reader announcement\nSafA11y.announce('My message', 'alert');\n\n// Set a custom DOM container for ARIA live region elements\nSafA11y.liveRegionContainer = 'div#my-container';\n\n// Set custom off-screen styles for live region elements\nSafA11y.liveRegionStyle = 'clip:rect(0 0 0 0); ...';\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-saf-a11y--docs"
        }
      ]
    },
    {
      "name": "saf-saffron-config",
      "description": "\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-saffron-config--docs"
        }
      ]
    },
    {
      "name": "saf-logger",
      "description": "\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-logger--docs"
        }
      ]
    },
    {
      "name": "saf-intersection-service",
      "description": "A service to batch intersection event callbacks so multiple elements can share a single observer\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-intersection-service--docs"
        }
      ]
    },
    {
      "name": "saf-start-end",
      "description": "A mixin class implementing start and end slots.\nThese are generally used to decorate text elements with icons or other visual indicators.\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-start-end--docs"
        }
      ]
    },
    {
      "name": "saf-accordion",
      "description": "An Accordion Custom HTML Element Implements {@link https://www.w3.org/TR/wai-aria-practices-1.1/#accordion | ARIA Accordion}.\n---\n\n\n### **Events:**\n - **change** - Fires a custom 'change' event when the active item changes\n\n### **Slots:**\n - _default_ - The slot for the accordion items",
      "attributes": [
        {
          "name": "expand-mode",
          "description": "Controls the expand mode of the Accordion, either allowing\nsingle or multiple item expansion.",
          "values": [{ "name": "single" }, { "name": "multi" }]
        },
        {
          "name": "density",
          "description": "The density of the accordion",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-accordion--docs"
        }
      ]
    },
    {
      "name": "saf-action-card",
      "description": "A class for ActionCard\n---\n",
      "attributes": [
        {
          "name": "density",
          "description": "The density of the action card",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "aria-label",
          "description": "Defines a string value that labels the `action-card`.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-action-card--docs"
        }
      ]
    },
    {
      "name": "saf-action-card-action",
      "description": "A class for ActionCardAction\n---\n",
      "attributes": [
        {
          "name": "density",
          "description": "The density of the action card action",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "mode",
          "description": "Mode of the action, can be 'a' or 'button'.",
          "values": [{ "name": "button" }, { "name": "a" }]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-action-card-action--docs"
        }
      ]
    },
    {
      "name": "saf-activity",
      "description": "A class for Activity\n---\n",
      "attributes": [
        {
          "name": "time",
          "description": "Describes the amount of time that has passed since the activity was completed. We recommend following the format described in <a href=\"/?path=/docs/design-foundations-content-conventions-date-and-time-formats--docs\">our content conventions</a>.",
          "values": []
        },
        {
          "name": "header-id",
          "description": "The unique ID for the activity header. This is used for accessibility. If there are multiple `saf-activity` components on your page or SPA, make sure to create a unique ID for each activity header",
          "values": []
        },
        {
          "name": "time-id",
          "description": "The unique ID for the time element of the activity list. This is used for accessibility. If there are multiple `saf-activity` components on your page or SPA, make sure to create a unique ID for each time element",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-activity--docs"
        }
      ]
    },
    {
      "name": "saf-alert",
      "description": "\n---\n\n\n### **Methods:**\n - **close(timer: _number_): _void_** - Function to hide the alert using CSS. Emits the `close` event after the alert is hidden.",
      "attributes": [
        {
          "name": "appearance",
          "description": "The appearance type of the alert.",
          "values": [
            { "name": "informational" },
            { "name": "success" },
            { "name": "warning" },
            { "name": "error" },
            { "name": "neutral" }
          ]
        },
        {
          "name": "alert-type",
          "description": "The type of alert. If the type is `inline`, or default, the alert will appear next to the element that triggered it. If `toast`, it will appear at the top of the web page.",
          "values": [{ "name": "toast" }, { "name": "inline" }]
        },
        {
          "name": "icon-aria-label",
          "description": "The text of `aria-label` inside of the icon used in the alert.",
          "values": []
        },
        {
          "name": "icon-presentation",
          "description": "Set the type of role that the saf icon will have in the saf alert. If this setting is used to hide the status icon from screen reader users its meaning must be reflected in the text of the alert message",
          "values": []
        },
        {
          "name": "close-aria-label",
          "description": "The text of the screen-reader only text that notifies screen-reader users of the value of the close button.",
          "values": []
        },
        {
          "name": "duration",
          "description": "The amount of time in seconds that the alert remains visible. The minimum duration for an alert is 10 seconds. To prevent the alert from disappearing, do not add this attribute or give it a value of 0.",
          "values": []
        },
        {
          "name": "is-hidden",
          "description": "The hidden state of the alert.",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "announce",
          "description": "Cause alert to be announced immediately by assistive technologies.",
          "values": []
        },
        {
          "name": "hide-close-button",
          "description": "Hide the close button to prevent the alert from being dismissed.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-alert--docs"
        }
      ]
    },
    {
      "name": "saf-anchor-base",
      "description": "An Anchor Custom HTML Element. Based largely on the {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element }.\n---\n\n\n### **Slots:**\n - **start** - Content which can be provided before the anchor content\n- **end** - Content which can be provided after the anchor content\n- _default_ - The default slot for anchor content\n\n### **CSS Parts:**\n - **control** - The anchor element\n- **content** - The element wrapping anchor content",
      "attributes": [
        {
          "name": "download",
          "description": "Prompts the user to save the linked URL.",
          "values": []
        },
        {
          "name": "href",
          "description": "The URL the hyperlink references.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element  for more information.",
          "values": []
        },
        {
          "name": "hreflang",
          "description": "Hints at the language of the referenced resource.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element  for more information.",
          "values": []
        },
        {
          "name": "ping",
          "description": "A space-separated list of URLs. When the link is followed, the browser will send POST requests with the body PING to the URLs.",
          "values": []
        },
        {
          "name": "referrerpolicy",
          "description": "Determines how much of the referrer to send when following the link.",
          "values": []
        },
        {
          "name": "rel",
          "description": "The relationship of the linked URL as space-separated link types.",
          "values": []
        },
        {
          "name": "target",
          "description": "Determines where a link will open in browsing context.",
          "values": [
            { "name": "_self" },
            { "name": "_blank" },
            { "name": "_parent" },
            { "name": "_top" }
          ]
        },
        {
          "name": "type",
          "description": "Hints at the linked URL's format with a MIME type. No built-in functionality.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "A description for the anchor that is only visible to screen readers.",
          "values": []
        },
        {
          "name": "a11y-aria-current",
          "description": "Indicates the element that represents the current item within a container or set of related elements.",
          "values": [
            { "name": "" },
            { "name": "page" },
            { "name": "step" },
            { "name": "location" },
            { "name": "date" },
            { "name": "time" },
            { "name": "true" },
            { "name": "false" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-anchor-base--docs"
        }
      ]
    },
    {
      "name": "saf-anchor",
      "description": "\n---\n\n\n### **Slots:**\n - **start** - Content which can be provided before the anchor content\n- **end** - Content which can be provided after the anchor content\n- _default_ - The default slot for anchor content\n\n### **CSS Parts:**\n - **control** - The anchor element\n- **content** - The element wrapping anchor content",
      "attributes": [
        {
          "name": "transfer-focus",
          "description": "`deprecated`. Handle click events instead.\nTODO: Remove in v4",
          "values": []
        },
        {
          "name": "span",
          "description": "If true, the anchor will be rendered as a span element instead of an anchor element. Useful for integrating with SPA links like `react-router-dom`.",
          "values": []
        },
        {
          "name": "appearance",
          "description": "The appearance style variant of the anchor.",
          "values": [{ "name": "AnchorAppearance" }]
        },
        {
          "name": "density",
          "description": "The density of the anchor when using a CTA appearance.\nOnly applies when appearance is set to a CTA variant.",
          "values": [{ "name": "ComponentDensityWithExtraCompact" }]
        },
        {
          "name": "icon-only",
          "description": "Indicates the anchor should be rendered as icon-only",
          "values": []
        },
        {
          "name": "download",
          "description": "Prompts the user to save the linked URL.",
          "values": []
        },
        {
          "name": "href",
          "description": "The URL the hyperlink references.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element  for more information.",
          "values": []
        },
        {
          "name": "hreflang",
          "description": "Hints at the language of the referenced resource.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element  for more information.",
          "values": []
        },
        {
          "name": "ping",
          "description": "A space-separated list of URLs. When the link is followed, the browser will send POST requests with the body PING to the URLs.",
          "values": []
        },
        {
          "name": "referrerpolicy",
          "description": "Determines how much of the referrer to send when following the link.",
          "values": []
        },
        {
          "name": "rel",
          "description": "The relationship of the linked URL as space-separated link types.",
          "values": []
        },
        {
          "name": "target",
          "description": "Determines where a link will open in browsing context.",
          "values": [
            { "name": "_self" },
            { "name": "_blank" },
            { "name": "_parent" },
            { "name": "_top" }
          ]
        },
        {
          "name": "type",
          "description": "Hints at the linked URL's format with a MIME type. No built-in functionality.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "A description for the anchor that is only visible to screen readers.",
          "values": []
        },
        {
          "name": "a11y-aria-current",
          "description": "Indicates the element that represents the current item within a container or set of related elements.",
          "values": [
            { "name": "" },
            { "name": "page" },
            { "name": "step" },
            { "name": "location" },
            { "name": "date" },
            { "name": "time" },
            { "name": "true" },
            { "name": "false" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-anchor--docs"
        }
      ]
    },
    {
      "name": "saf-delegates-arialink",
      "description": "Includes ARIA states and properties relating to the ARIA link role\n---\n",
      "attributes": [
        {
          "name": "aria-expanded",
          "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
          "values": [{ "name": "true" }, { "name": "false" }]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-delegates-arialink--docs"
        }
      ]
    },
    {
      "name": "saf-anchored-region",
      "description": "An anchored region Custom HTML Element.\n---\n\n\n### **Events:**\n - **loaded** - Fires a custom 'loaded' event when the region is loaded and visible\n- **positionchange** - Fires a custom 'positionchange' event when the position has changed\n\n### **Slots:**\n - _default_ - The default slot for the content",
      "attributes": [
        {
          "name": "anchor",
          "description": "The HTML ID of the anchor element this region is positioned relative to",
          "values": []
        },
        {
          "name": "viewport",
          "description": "The ID of the element that serves as the viewport for the region.",
          "values": []
        },
        {
          "name": "horizontal-positioning-mode",
          "description": "Sets what logic the component uses to determine horizontal placement.\n'locktodefault' forces the default position\n'dynamic' decides placement based on available space\n'uncontrolled' does not control placement on the horizontal axis",
          "values": [
            { "name": "uncontrolled" },
            { "name": "locktodefault" },
            { "name": "dynamic" }
          ]
        },
        {
          "name": "horizontal-default-position",
          "description": "The default horizontal position of the region relative to the anchor element",
          "values": [
            { "name": "start" },
            { "name": "end" },
            { "name": "left" },
            { "name": "right" },
            { "name": "center" },
            { "name": "unset" }
          ]
        },
        {
          "name": "horizontal-viewport-lock",
          "description": "Whether the region remains in the viewport (ie. detaches from the anchor) on the horizontal axis",
          "values": []
        },
        {
          "name": "horizontal-inset",
          "description": "Whether the region overlaps the anchor on the horizontal axis",
          "values": []
        },
        {
          "name": "horizontal-threshold",
          "description": "How narrow the space allocated to the default position has to be before the widest area is selected for layout.",
          "values": []
        },
        {
          "name": "horizontal-scaling",
          "description": "Defines how the width of the region is calculated",
          "values": [
            { "name": "anchor" },
            { "name": "content" },
            { "name": "fill" }
          ]
        },
        {
          "name": "vertical-positioning-mode",
          "description": "Sets what logic the component uses to determine vertical placement.\n'locktodefault' forces the default position\n'dynamic' decides placement based on available space\n'uncontrolled' does not control placement on the vertical axis",
          "values": [
            { "name": "uncontrolled" },
            { "name": "locktodefault" },
            { "name": "dynamic" }
          ]
        },
        {
          "name": "vertical-default-position",
          "description": "The default vertical position of the region relative to the anchor element",
          "values": [
            { "name": "top" },
            { "name": "bottom" },
            { "name": "center" },
            { "name": "unset" }
          ]
        },
        {
          "name": "vertical-viewport-lock",
          "description": "Whether the region remains in the viewport (ie. detaches from the anchor) on the vertical axis",
          "values": []
        },
        {
          "name": "vertical-inset",
          "description": "Whether the region overlaps the anchor on the vertical axis",
          "values": []
        },
        {
          "name": "vertical-threshold",
          "description": "How short the space allocated to the default position has to be before the tallest area is selected for layout.",
          "values": []
        },
        {
          "name": "vertical-scaling",
          "description": "Defines how the height of the region is calculated",
          "values": [
            { "name": "anchor" },
            { "name": "content" },
            { "name": "fill" }
          ]
        },
        {
          "name": "fixed-placement",
          "description": "Whether the region is positioned using css \"position: fixed\" allows the region to break out of parent containers.",
          "values": []
        },
        {
          "name": "auto-update-mode",
          "description": "Defines what triggers the anchored region to revaluate positioning",
          "values": [{ "name": "anchor" }, { "name": "auto" }]
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-anchored-region--docs"
        }
      ]
    },
    {
      "name": "saf-ariaglobal-states-and-properties",
      "description": "Some states and properties are applicable to all host language elements regardless of whether a role is applied.\nThe following global states and properties are supported by all roles and by all base markup elements.\n---\n",
      "attributes": [
        {
          "name": "aria-atomic",
          "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the `aria-relevant` attribute.",
          "values": [{ "name": "true" }, { "name": "false" }]
        },
        {
          "name": "aria-busy",
          "description": "Indicates an element is being modified and that assistive technologies may want to wait until the modifications are complete before exposing them to the user.",
          "values": [{ "name": "true" }, { "name": "false" }]
        },
        {
          "name": "aria-controls",
          "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
          "values": []
        },
        {
          "name": "aria-current",
          "description": "Indicates the element that represents the current item within a container or set of related elements.",
          "values": [
            { "name": "" },
            { "name": "page" },
            { "name": "step" },
            { "name": "location" },
            { "name": "date" },
            { "name": "time" },
            { "name": "true" },
            { "name": "false" }
          ]
        },
        {
          "name": "aria-describedby",
          "description": "Identifies the element (or elements) that describes the object.",
          "values": []
        },
        {
          "name": "aria-details",
          "description": "Identifies the element that provides a detailed, extended description for the object.",
          "values": []
        },
        {
          "name": "aria-disabled",
          "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
          "values": [{ "name": "true" }, { "name": "false" }]
        },
        {
          "name": "aria-errormessage",
          "description": "Identifies the element that provides an error message for the object.",
          "values": []
        },
        {
          "name": "aria-flowto",
          "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion, allows assistive technology to override the general default of reading in document source order.",
          "values": []
        },
        {
          "name": "aria-haspopup",
          "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
          "values": [
            { "name": "" },
            { "name": "false" },
            { "name": "true" },
            { "name": "menu" },
            { "name": "listbox" },
            { "name": "tree" },
            { "name": "grid" },
            { "name": "dialog" }
          ]
        },
        {
          "name": "aria-hidden",
          "description": "Indicates whether the element is exposed to a screen reader.",
          "values": [{ "name": "false" }, { "name": "true" }]
        },
        {
          "name": "aria-invalid",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "values": [
            { "name": "false" },
            { "name": "true" },
            { "name": "grammar" },
            { "name": "spelling" }
          ]
        },
        {
          "name": "aria-keyshortcuts",
          "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
          "values": []
        },
        {
          "name": "aria-label",
          "description": "Defines a string value that labels the current element.",
          "values": []
        },
        {
          "name": "aria-labelledby",
          "description": "Identifies the element (or elements) that labels the current element.",
          "values": []
        },
        {
          "name": "aria-live",
          "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
          "values": [
            { "name": "assertive" },
            { "name": "off" },
            { "name": "polite" }
          ]
        },
        {
          "name": "aria-owns",
          "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
          "values": []
        },
        {
          "name": "aria-relevant",
          "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
          "values": [
            { "name": "" },
            { "name": "additions" },
            { "name": "additions text" },
            { "name": "all" },
            { "name": "removals" },
            { "name": "text" }
          ]
        },
        {
          "name": "aria-roledescription",
          "description": "Defines a human-readable, author-localized description for the role of an element.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-ariaglobal-states-and-properties--docs"
        }
      ]
    },
    {
      "name": "saf-avatar",
      "description": "An Avatar Custom HTML Element\n---\n\n\n### **Slots:**\n - **media** - Used for media such as an image\n- _default_ - The default slot for avatar text, commonly a name or initials\n- **badge** - Used to provide a badge, such as a status badge\n\n### **CSS Parts:**\n - **backplate** - The wrapping container for the avatar\n- **content** - The default slot",
      "attributes": [
        {
          "name": "size",
          "description": "Determines avatar size.",
          "values": [
            { "name": "xlarge" },
            { "name": "large" },
            { "name": "medium" },
            { "name": "small" }
          ]
        },
        {
          "name": "appearance",
          "description": "Determines the appearance of the avatar.",
          "values": [
            { "name": "icon" },
            { "name": "icon-light" },
            { "name": "image" },
            { "name": "image-light" },
            { "name": "blue" },
            { "name": "blue-light" },
            { "name": "gray" },
            { "name": "gray-light" },
            { "name": "green" },
            { "name": "green-light" },
            { "name": "neutral" },
            { "name": "neutral-light" },
            { "name": "purple" },
            { "name": "purple-light" },
            { "name": "red" },
            { "name": "red-light" },
            { "name": "hue-2" },
            { "name": "hue-2-light" }
          ]
        },
        {
          "name": "img-src",
          "description": "Determines the source of the image if appearance is set to image.",
          "values": []
        },
        {
          "name": "label",
          "description": "Determines the accessible label for the avatar. When used with initials or an image its used to provide the full name to screen readers.",
          "values": []
        },
        {
          "name": "presentation",
          "description": "The option to enable or disable presentation",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-avatar--docs"
        }
      ]
    },
    {
      "name": "saf-back-to-top",
      "description": "A class for back-to-top derived from the Button foundation component\n---\n",
      "attributes": [
        {
          "name": "scroll-to-id",
          "description": "The anchor id to which you want to scroll.\nFor example, if you want to scroll to the top of the body, and the body has an id of `top`, the value for this attribute is `top`.",
          "values": []
        },
        {
          "name": "y-offset",
          "description": "The distance in pixels a user has to scroll from the top before the component appears.",
          "values": []
        },
        {
          "name": "direction",
          "description": "Whether or not the component is used in a right-to-left situation.\nIf rtl, the component will appear on the bottom left side of the screen.",
          "values": [{ "name": "Direction" }]
        },
        {
          "name": "tooltip-text",
          "description": "The text that appears in the tooltip that is activated on hover or focus.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "A description for the anchor that is only visible to screen readers, passed to a hidden span element, connected to the anchor via aria-describedby",
          "values": []
        },
        { "name": "id", "values": [] }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-back-to-top--docs"
        }
      ]
    },
    {
      "name": "saf-badge",
      "description": "A Badge Custom HTML Element.\n---\n\n\n### **Slots:**\n - **start** - Content which can be provided before the default slot\n- **end** - Content which can be provided after the default slot\n- _default_ - The default slot for the badge\n\n### **CSS Parts:**\n - **control** - The element wrapping the default slot",
      "attributes": [
        {
          "name": "attached",
          "description": "Determines if the badge is attached to its parent.",
          "values": []
        },
        {
          "name": "counter",
          "description": "If true, the badge will render a smaller variant meant to be used as a counter.",
          "values": []
        },
        {
          "name": "appearance",
          "description": "Determines the appearance of the badge.",
          "values": [
            { "name": "error" },
            { "name": "error-light" },
            { "name": "info" },
            { "name": "info-light" },
            { "name": "success" },
            { "name": "success-light" },
            { "name": "warning" },
            { "name": "warning-light" },
            { "name": "neutral" },
            { "name": "neutral-light" }
          ]
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-badge--docs"
        }
      ]
    },
    {
      "name": "saf-breadcrumb",
      "description": "A Breadcrumb Custom HTML Element.\n---\n\n\n### **Slots:**\n - _default_ - The default slot for the breadcrumb items\n\n### **CSS Parts:**\n - **list** - The element wrapping the slotted items",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-breadcrumb--docs"
        }
      ]
    },
    {
      "name": "saf-button-base",
      "description": "contains attributes and logic related to buttons in general (i.e. disabled, autofocus, aria attributes)\n---\n",
      "attributes": [
        {
          "name": "disabled",
          "description": "Prevents the user from interacting with the component.",
          "values": []
        },
        {
          "name": "autofocus",
          "description": "Determines if the element should receive document focus on page load.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "Pass through for a div that adds additional information for the button, which uses aria-describedby to associate the two",
          "values": []
        },
        {
          "name": "a11y-aria-controls",
          "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
          "values": []
        },
        {
          "name": "a11y-aria-haspopup",
          "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
          "values": [
            { "name": "" },
            { "name": "false" },
            { "name": "true" },
            { "name": "menu" },
            { "name": "listbox" },
            { "name": "tree" },
            { "name": "grid" },
            { "name": "dialog" }
          ]
        },
        {
          "name": "a11y-aria-expanded",
          "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
          "values": [{ "name": "" }, { "name": "true" }, { "name": "false" }]
        },
        {
          "name": "aria-pressed",
          "description": "Indicates the current \"pressed\" state of toggle buttons.",
          "values": [
            { "name": "true" },
            { "name": "false" },
            { "name": "mixed" }
          ]
        },
        {
          "name": "a11y-aria-label",
          "description": "attr for passing aria-label to the button without also being applied to the component element",
          "values": []
        },
        {
          "name": "a11y-role",
          "description": "attr for passing role to the button without also being applied to the component element",
          "values": []
        },
        {
          "name": "a11y-aria-valuenow",
          "description": "attr for passing aria-valuenow to the button",
          "values": []
        },
        {
          "name": "a11y-aria-valuemin",
          "description": "attr for passing aria-valuemin to the button",
          "values": []
        },
        {
          "name": "a11y-aria-valuemax",
          "description": "attr for passing aria-valuemax to the button",
          "values": []
        },
        {
          "name": "a11y-aria-orientation",
          "description": "attr for passing aria-orientation to the button",
          "values": []
        },
        {
          "name": "a11y-aria-roledescription",
          "description": "attr for passing aria-roledescription to the button",
          "values": []
        },
        {
          "name": "aria-selected",
          "description": "Indicates the current \"selected\" state.",
          "values": [{ "name": "true" }, { "name": "false" }]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-button-base--docs"
        }
      ]
    },
    {
      "name": "saf-button",
      "description": "contains attributes and logic related to Saffron button (i.e. density, layout, shape)\n---\n",
      "attributes": [
        {
          "name": "appearance",
          "description": "Determines the visual appearance of the button.",
          "values": [
            { "name": "primary" },
            { "name": "secondary" },
            { "name": "tertiary" },
            { "name": "inline" }
          ]
        },
        {
          "name": "shape",
          "description": "Determines if the icon buttons are rectangle (default) or circular shape. Shape circle only affects icon buttons.",
          "values": [{ "name": "undefined" }, { "name": "circle" }]
        },
        {
          "name": "icon-only",
          "description": "Adds styles to render an icon only button",
          "values": []
        },
        {
          "name": "nested-item",
          "description": "Adds styles to nested buttons used within other components",
          "values": []
        },
        {
          "name": "layout",
          "description": "If set to `block`, will have the button expand to the full width of its container",
          "values": [{ "name": "block" }]
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" },
            { "name": "extra-compact" }
          ]
        },
        {
          "name": "disabled",
          "description": "Prevents the user from interacting with the component.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "Pass through for a div that adds additional information for the button, which uses aria-describedby to associate the two",
          "values": []
        },
        {
          "name": "a11y-aria-controls",
          "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
          "values": []
        },
        {
          "name": "a11y-aria-haspopup",
          "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
          "values": [
            { "name": "" },
            { "name": "false" },
            { "name": "true" },
            { "name": "menu" },
            { "name": "listbox" },
            { "name": "tree" },
            { "name": "grid" },
            { "name": "dialog" }
          ]
        },
        {
          "name": "a11y-aria-expanded",
          "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
          "values": [{ "name": "" }, { "name": "true" }, { "name": "false" }]
        },
        {
          "name": "aria-pressed",
          "description": "Indicates the current \"pressed\" state of toggle buttons.",
          "values": [
            { "name": "true" },
            { "name": "false" },
            { "name": "mixed" }
          ]
        },
        {
          "name": "a11y-aria-label",
          "description": "attr for passing aria-label to the button without also being applied to the component element",
          "values": []
        },
        {
          "name": "a11y-role",
          "description": "attr for passing role to the button without also being applied to the component element",
          "values": []
        },
        {
          "name": "a11y-aria-valuenow",
          "description": "attr for passing aria-valuenow to the button",
          "values": []
        },
        {
          "name": "a11y-aria-valuemin",
          "description": "attr for passing aria-valuemin to the button",
          "values": []
        },
        {
          "name": "a11y-aria-valuemax",
          "description": "attr for passing aria-valuemax to the button",
          "values": []
        },
        {
          "name": "a11y-aria-orientation",
          "description": "attr for passing aria-orientation to the button",
          "values": []
        },
        {
          "name": "a11y-aria-roledescription",
          "description": "attr for passing aria-roledescription to the button",
          "values": []
        },
        {
          "name": "aria-selected",
          "description": "Indicates the current \"selected\" state.",
          "values": [{ "name": "true" }, { "name": "false" }]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-button--docs"
        }
      ]
    },
    {
      "name": "saf-form-button",
      "description": "contains attributes and logic related to form associated buttons (i.e. name, value, form submission logic)\n---\n",
      "attributes": [
        {
          "name": "form",
          "description": "The `id` of a form to associate the element to.",
          "values": []
        },
        {
          "name": "formaction",
          "description": "The URL that processes the information submitted by the button.",
          "values": []
        },
        {
          "name": "formenctype",
          "description": "Specifies how to encode the form data that is submitted.",
          "values": []
        },
        {
          "name": "formmethod",
          "description": "Specifies the HTTP method used to submit the form.",
          "values": []
        },
        {
          "name": "formnovalidate",
          "description": "Specifies that the form is not to be validated when it is submitted.",
          "values": []
        },
        {
          "name": "formtarget",
          "description": "Indicates where to display the response from submitting the form.",
          "values": [
            { "name": "_self" },
            { "name": "_blank" },
            { "name": "_parent" },
            { "name": "_top" }
          ]
        },
        {
          "name": "type",
          "description": "The default behavior of the button.",
          "values": [
            { "name": "submit" },
            { "name": "reset" },
            { "name": "button" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-form-button--docs"
        }
      ]
    },
    {
      "name": "saf-button-embedded",
      "description": "ButtonEmbedded\n---\n",
      "attributes": [
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-button-button-embedded--basic"
        }
      ]
    },
    {
      "name": "saf-button-group",
      "description": "ButtonGroup\naria-label: string (required) - To identify the group of buttons\nrole: string (optional) - The role of the button group\n---\n",
      "attributes": [
        {
          "name": "aria-label",
          "description": "Defines a string value to identify the component as an interactive element.",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        { "name": "role", "values": [] },
        {
          "name": "orientation",
          "description": "Determines the orientation of the button group.",
          "values": [{ "name": "horizontal" }, { "name": "vertical" }]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-button-button-group--overview"
        }
      ]
    },
    {
      "name": "saf-card",
      "description": "A class for Card\n---\n",
      "attributes": [
        {
          "name": "appearance",
          "description": "Determines the card orientation.",
          "values": [{ "name": "horizontal" }, { "name": "vertical" }]
        },
        {
          "name": "heading-level",
          "description": "Configures the https://www.w3.org/TR/wai-aria-1.1/#aria-level | level of the heading element.",
          "values": [
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" }
          ]
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "image-bleed",
          "description": "Determines if the image bleeds to the edge of the card or is inset",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-card--docs"
        }
      ]
    },
    {
      "name": "saf-carousel",
      "description": "A class for Carousel\n---\n",
      "attributes": [
        {
          "name": "flippers-hidden-from-AT",
          "description": "Hide or show the flippers for assistive technologies.",
          "values": []
        },
        {
          "name": "slide-label",
          "description": "Header to display in slide controls.",
          "values": []
        },
        {
          "name": "total-slides",
          "description": "Determines the total number of slides.",
          "values": []
        },
        {
          "name": "current-slide",
          "description": "Determines the number of the current slide.",
          "values": []
        },
        { "name": "step", "values": [] },
        {
          "name": "contentContainer",
          "values": [{ "name": "HTMLDivElement" }]
        },
        { "name": "scrollArea", "values": [{ "name": "HTMLDivElement" }] },
        { "name": "slotContent", "values": [{ "name": "HTMLSlotElement" }] },
        { "name": "slides", "values": [{ "name": "Element[]" }] },
        { "name": "endOfSlides", "values": [] },
        { "name": "currentIndex", "values": [] },
        { "name": "observe-resize", "values": [] }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-carousel--docs"
        }
      ]
    },
    {
      "name": "saf-chat",
      "description": "A class for Chat\n---\n",
      "attributes": [
        {
          "name": "aria-label",
          "description": "The aria label for the region called chat.",
          "values": []
        },
        {
          "name": "loading",
          "description": "Whether or not the content is being loaded.",
          "values": []
        },
        {
          "name": "loading-text",
          "description": "Text on loading ring.",
          "values": []
        },
        {
          "name": "message-aria-label",
          "description": "The aria label for the list of chat messages.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-chat--docs"
        }
      ]
    },
    {
      "name": "saf-checkbox",
      "description": "A Checkbox Custom HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#checkbox | ARIA checkbox }.\n---\n\n\n### **Events:**\n - **change** - Emits a custom change event when the checked state changes\n\n### **Slots:**\n - **checked-indicator** - The checked indicator\n- **indeterminate-indicator** - The indeterminate indicator\n- _default_ - The default slot for the label\n\n### **CSS Parts:**\n - **control** - The element representing the visual checkbox control\n- **label** - The label",
      "attributes": [
        {
          "name": "id",
          "description": "Pass through the input element.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "Pass through for a div that adds additional information for the button, which uses aria-describedby to associate the two",
          "values": []
        },
        {
          "name": "invalid",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "values": []
        },
        {
          "name": "validation-message",
          "description": "The message displayed when the control is valid or invalid.",
          "values": []
        },
        {
          "name": "error-aria-label",
          "description": "Defines a string value that labels the error icon, when icons are not just presentational but used to communicate status.",
          "values": []
        },
        {
          "name": "a11y-aria-label",
          "description": "A label that is passed from the component to the checkbox input element.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-checkbox--docs"
        }
      ]
    },
    {
      "name": "saf-chip",
      "description": "A class for Chip\n---\n",
      "attributes": [
        {
          "name": "closeable",
          "description": "Toggles the close icon and the ability to close the chip by clicking the component.",
          "values": []
        },
        {
          "name": "close-button-label",
          "description": "The close button label and its tooltip text.",
          "values": []
        },
        {
          "name": "closeable-tooltip",
          "description": "Toggles the close icon tooltip.",
          "values": []
        },
        {
          "name": "tooltip-text",
          "description": "Text of the close icon.",
          "values": []
        },
        {
          "name": "announce-tooltip",
          "description": "Causes tooltip contents to be announced by assistive technologies.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "Pass through for a div that adds additional information for the button, which uses aria-describedby to associate the two",
          "values": []
        },
        {
          "name": "a11y-aria-controls",
          "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
          "values": []
        },
        {
          "name": "a11y-aria-haspopup",
          "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
          "values": [
            { "name": "" },
            { "name": "false" },
            { "name": "true" },
            { "name": "menu" },
            { "name": "listbox" },
            { "name": "tree" },
            { "name": "grid" },
            { "name": "dialog" }
          ]
        },
        {
          "name": "a11y-aria-expanded",
          "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
          "values": [{ "name": "" }, { "name": "true" }, { "name": "false" }]
        },
        {
          "name": "aria-pressed",
          "description": "Indicates the current \"pressed\" state of toggle buttons.",
          "values": [
            { "name": "true" },
            { "name": "false" },
            { "name": "mixed" }
          ]
        },
        {
          "name": "a11y-aria-label",
          "description": "attr for passing aria-label to the button without also being applied to the component element",
          "values": []
        },
        {
          "name": "a11y-role",
          "description": "attr for passing role to the button without also being applied to the component element",
          "values": []
        },
        {
          "name": "a11y-aria-valuenow",
          "description": "attr for passing aria-valuenow to the button",
          "values": []
        },
        {
          "name": "a11y-aria-valuemin",
          "description": "attr for passing aria-valuemin to the button",
          "values": []
        },
        {
          "name": "a11y-aria-valuemax",
          "description": "attr for passing aria-valuemax to the button",
          "values": []
        },
        {
          "name": "a11y-aria-orientation",
          "description": "attr for passing aria-orientation to the button",
          "values": []
        },
        {
          "name": "a11y-aria-roledescription",
          "description": "attr for passing aria-roledescription to the button",
          "values": []
        },
        {
          "name": "aria-selected",
          "description": "Indicates the current \"selected\" state.",
          "values": [{ "name": "true" }, { "name": "false" }]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-chip--docs"
        }
      ]
    },
    {
      "name": "saf-click-away-listener",
      "description": "A class for ClickAwayListener\n---\n",
      "attributes": [
        {
          "name": "density",
          "description": "The density of the alert.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-click-away-listener--docs"
        }
      ]
    },
    {
      "name": "saf-combobox",
      "description": "\n---\n\n\n### **Events:**\n - **input** - Fires a custom 'input' event when user types in the input\n- **open** - Fires a custom 'open' event when the listbox opens\n- **close** - Fires a custom 'close' event when the listbox closes\n- **clear** - Fires a custom 'clear' event when the clear button is clicked\n- **scroll-end** - Fires a custom 'scroll-end' event when the listbox reaches the end of the scroll\n\n### **Methods:**\n - **clearHandler(e: _MouseEvent_)** - Emits clear event when clear button is clicked.\n- **setAutocomplete(from: _string_, to: _string_)** - Public method to achieve autocomplete in controlled form.\n- **select()** - Select combobox input content\n\n### **Slots:**\n - _default_ - The default slot for the options\n- **root** - The wrapper element containing the input area, including start and end\n- **control** - Used to replace the input element representing the combobox\n- **start** - Content which can be provided before the input\n- **end** - Content which can be provided after the input\n- **loading** - The progress indicator to show while loading\n- **clear** - The button to clear the combobox\n- **chips** - Used to render chips for selected elements in multiple mode\n- **success** - The wrapper for success validation feedback\n- **error** - The wrapper for error validation feedback\n\n### **CSS Parts:**\n - **indicator** - The element wrapping the indicator slot\n- **label-container** - The container for the label and required indicator\n- **label** - The label text element\n- **optional-text** - The optional text element\n- **instructional-text** - The instructional text element\n- **root** - The wrapper div element containing input, loading, clear, and indicator\n- **clear-button** - The button element used to clear the input\n- **listbox** - The wrapper for the listbox slotted options\n- **success** - The wrapper for success validation feedback\n- **success-icon** - The success icon\n- **error** - The wrapper for error validation feedback\n- **error-icon** - The error icon\n- **message** - The validation message element under success or error\n- **a11y-aria-description** - The div that contains the additional information",
      "attributes": [
        {
          "name": "id",
          "description": "Unique ID on the input text element.",
          "values": []
        },
        {
          "name": "required",
          "description": "Whether input field is required to enter.\nNote that the validation state is controlled, and this attribute is only used for styling and accessibility purposes.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Toggles the disabled state for the combobox.",
          "values": []
        },
        {
          "name": "a11y-keyboard-help",
          "description": "Text for listbox aria-description in multiple mode",
          "values": []
        },
        {
          "name": "progress-ring-aria-label",
          "description": "Text for progress ring aria label",
          "values": []
        },
        {
          "name": "empty-option-text",
          "description": "Text to show in a disabled option when no results are found.\nAppears only when the `search-offline` attribute is true.",
          "values": []
        },
        {
          "name": "placeholder",
          "description": "Sets the placeholder value of the input, generally used to provide a hint to the user.",
          "values": []
        },
        {
          "name": "readonly",
          "description": "The readonly attribute for input.",
          "values": []
        },
        {
          "name": "invalid",
          "description": "Validation state. If true, combobox is invalid.\nIf false, combobox is indeterminate.",
          "values": []
        },
        {
          "name": "is-success",
          "description": "Validation state. If true and invalid is false, combobox is in success state.\nIf false, combobox is in indeterminate state.",
          "values": []
        },
        { "name": "label", "description": "Label text value.", "values": [] },
        {
          "name": "input-aria-label",
          "description": "Aria label to input element.",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "Paragraph element that takes instructional text.",
          "values": []
        },
        {
          "name": "required-text",
          "description": "Text to visually indicate the field is required.",
          "values": []
        },
        {
          "name": "optional-text",
          "description": "For accessibility purposes, allows author to mentions in text next to label\nwhether the field is optional '(Optional)' or '(Required)'.",
          "values": []
        },
        {
          "name": "loading",
          "description": "Indicates loading state of the combobox. To be used with remote search.",
          "values": []
        },
        {
          "name": "clearable",
          "description": "Indicates whether the input field is clearable when clicks on the clear button.",
          "values": []
        },
        {
          "name": "density",
          "description": "The density of the combobox",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "validation-message",
          "description": "Text message to show when invalid is true (error)\nor isSuccess is true (success).",
          "values": []
        },
        {
          "name": "success-aria-label",
          "description": "The aria label for the success icon.",
          "values": []
        },
        {
          "name": "error-aria-label",
          "description": "The aria label for the error icon.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "Pass through for a div that adds additional information for combobox",
          "values": []
        },
        {
          "name": "multiple",
          "description": "Specifies if combobox is in multiselect mode.",
          "values": []
        },
        {
          "name": "close-on-select",
          "description": "If true, listbox closes automatically on selecting an option.\nIf false, listbox remains open until user clicks outside or\npresses escape key.",
          "values": []
        },
        {
          "name": "clear-on-escape",
          "description": "If true, when pressing escape key, combobox will emit the `clear` event.",
          "values": []
        },
        {
          "name": "open-on-focus",
          "description": "If true, upon combobox focus, listbox will open.",
          "values": []
        },
        {
          "name": "search-offline",
          "description": "If true, combobox will search offline in the available options.\nIf false, typing in the input will not filter the options. You control the filtering and the options passed to the listbox.",
          "values": []
        },
        {
          "name": "search-mode",
          "description": "Specifies search mode used when searchOffline is true.",
          "values": [{ "name": "includes" }, { "name": "startsWith" }]
        },
        {
          "name": "autocomplete",
          "description": "If true, on input, first option label will be populated in the field.\nWorks only when `searchOffline==true`, `searchMode=='startsWith'` and `multiple==false`.\nTo use autocomplete with a custom search mode (`searchOffline==false`), refer to the `setAutocomplete()` public method.",
          "values": []
        },
        {
          "name": "browser-autocomplete",
          "description": "Specifies the autocomplete attribute for the input element,\nwhich can be used to provide hints for the browser's autocomplete functionality.",
          "values": []
        },
        {
          "name": "virtualized",
          "description": "Turns virtualization feature on and off for the listbox container.",
          "values": []
        },
        {
          "name": "estimated-item-height",
          "description": "Default height for each option when virtualization is on.",
          "values": []
        },
        {
          "name": "virtualization-padding",
          "description": "Determines the number of options to render in the listbox before and after the virtualization window.\nFor example, if the listbox shows 7 items, and padding is 3 items, a total of 3+7+3=13 items will be rendered at a given moment.",
          "values": []
        },
        {
          "name": "highlight-substrings",
          "description": "If true, the combobox will highlight the substring in the options\nthat matches the user input.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-combobox--docs"
        }
      ]
    },
    {
      "name": "saf-container",
      "description": "\n---\n",
      "attributes": [
        {
          "name": "max-width",
          "description": "Controls the maximum width of the container based on CSS container queries.",
          "values": [{ "name": "Breakpoint" }]
        },
        {
          "name": "centered",
          "description": "Determines if the content should be centered.",
          "values": []
        },
        {
          "name": "disable-padding",
          "description": "Used to disable the padding on the container. Typically used for components that have padding like tabs and navigation.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-container--docs"
        }
      ]
    },
    {
      "name": "saf-date-picker",
      "description": "A class for DatePicker\n---\n\n\n### **Methods:**\n - **setValue(date: _Date_): _void_** - Public function to set value of the date picker\nand the input.\n- **getDateDisabled(_date: _Date_): _boolean_** - Bind this function to be able to disable specific dates i.e. disable weekends.",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the datePicker.",
          "values": []
        },
        {
          "name": "id",
          "description": "The id attribute of the date picker element.",
          "values": []
        },
        {
          "name": "label",
          "description": "Text that describes the input.",
          "values": []
        },
        {
          "name": "date-picker-aria-label",
          "description": "The text appended to the label for the `aria-label` of the dialog.",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "Provides additional instructional text that provides extra guidance for the input.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Prevents the user from interacting with the input.",
          "values": []
        },
        {
          "name": "required",
          "description": "A value is required or must be checked for the form to be submittable.",
          "values": []
        },
        {
          "name": "required-text",
          "description": "Adds additional character to the label when text-field is required.",
          "values": []
        },
        {
          "name": "readonly",
          "description": "When true, the control will be immutable by user interaction.",
          "values": []
        },
        {
          "name": "optional-text",
          "description": "Provides additional optional text to the label. Accepts any text but intended to indicate `(Required)` or `(Optional)`.",
          "values": []
        },
        {
          "name": "locale",
          "description": "Locale used for date-picker. If value is not provided or is invalid, locale will be `navigator.language`.",
          "values": []
        },
        {
          "name": "format",
          "description": "Default date format. If value is not provided or is invalid, the format will be based on the locale.",
          "values": []
        },
        {
          "name": "min-date",
          "description": "Minimum selectable date. Defaults to 'yyyy-MM-dd' format unless a custom format is specified using the 'format' attribute.",
          "values": []
        },
        {
          "name": "max-date",
          "description": "Maximum selectable date. Defaults to 'yyyy-MM-dd' format unless a custom format is specified using the 'format' attribute.",
          "values": []
        },
        {
          "name": "autocorrect",
          "description": "Determines whether the component automatically corrects invalid dates",
          "values": []
        },
        {
          "name": "default-date",
          "description": "Default value for the date picker. Defaults to 'yyyy-MM-dd' format unless a custom format is specified using the 'format' attribute.",
          "values": []
        },
        {
          "name": "default-picker-date",
          "description": "Default picker view month and date to focus in\nthe format \"yyyy-MM-dd\".",
          "values": []
        },
        {
          "name": "is-success",
          "description": "Specifies that the control is valid and that a success message should display.",
          "values": []
        },
        {
          "name": "invalid",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "values": []
        },
        {
          "name": "validation-message",
          "description": "The message displayed when the control is valid or invalid.",
          "values": []
        },
        {
          "name": "open-picker-aria-label",
          "description": "aria-label for the icon button that opens the picker.",
          "values": []
        },
        {
          "name": "prev-month-aria-label",
          "description": "aria-label for the previous month icon button.",
          "values": []
        },
        {
          "name": "next-month-aria-label",
          "description": "aria-label for the next month icon button.",
          "values": []
        },
        {
          "name": "month-select-aria-label",
          "description": "aria-label for the month select dropdown.",
          "values": []
        },
        {
          "name": "year-select-aria-label",
          "description": "aria-label for the year select dropdown.",
          "values": []
        },
        {
          "name": "first-day-of-the-week",
          "description": "Determines the day shown at the beginning of date picker.\nTakes a value from 0 to 6, representing Sunday to Saturday.\nIf value is not provided or is invalid, the first day of the week will be based on the locale.",
          "values": [{ "name": "DatePickerDayOfWeek" }]
        },
        {
          "name": "weekdays-short",
          "description": "Abbreviated names for weekdays. Override to change the weekdays letters shown in the picker.",
          "values": [{ "name": "string[]" }]
        },
        {
          "name": "weekdays-full",
          "description": "Full names for weekdays. Override to change the weekdays aria-label.",
          "values": [{ "name": "string[]" }]
        },
        {
          "name": "get-date-disabled",
          "description": "Bind this function to be able to disable specific dates i.e. disable weekends.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-date-picker--docs"
        }
      ]
    },
    {
      "name": "saf-description-list",
      "description": "A class derived from the FASTElement foundation component\n---\n",
      "attributes": [
        {
          "name": "bullet-point",
          "description": "Determine if the bullets are going to be displayed or not.",
          "values": []
        },
        {
          "name": "orientation",
          "description": "Determine the orientation of the description list.",
          "values": [{ "name": "horizontal" }, { "name": "vertical" }]
        },
        {
          "name": "col-number",
          "description": "Determine the number of columns for the description list.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-description-list--docs"
        }
      ]
    },
    {
      "name": "saf-dialog",
      "description": "A class derived from the Dialog foundation component\n---\n\n\n### **Events:**\n - **cancel** - Fires a custom 'cancel' event when the modal overlay is clicked\n- **close** - Fires a custom 'close' event when the dialog is hidden\n\n### **Methods:**\n \n\n\n\n### **Slots:**\n - _default_ - The default slot for the dialog content\n\n### **CSS Parts:**\n - **positioning-region** - A wrapping element used to center the dialog and position the modal overlay\n- **overlay** - The modal dialog overlay\n- **control** - The dialog element",
      "attributes": [
        {
          "name": "a11y-aria-label",
          "description": "Use to label the dialog if it does not have a title.",
          "values": []
        },
        {
          "name": "close-aria-label",
          "description": "The aria-label for the close button.",
          "values": []
        },
        {
          "name": "is-alert",
          "description": "Determines whether dialog is an alert with `role=\"alertdialog\"`.",
          "values": []
        },
        {
          "name": "is-header",
          "description": "Determines whether header appears in dialog.",
          "values": []
        },
        {
          "name": "is-footer",
          "description": "Determines whether footer appears in dialog.",
          "values": []
        },
        {
          "name": "dialog-title",
          "description": "The title of the dialog.",
          "values": []
        },
        {
          "name": "aria-title-level",
          "description": "Configures the https://www.w3.org/TR/wai-aria-1.1/#aria-level | aria-level of the heading element.",
          "values": [
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" }
          ]
        },
        {
          "name": "dialog-subtitle",
          "description": "Dialog subtitle heading",
          "values": []
        },
        {
          "name": "aria-subtitle-level",
          "description": "Configures the https://www.w3.org/TR/wai-aria-1.1/#aria-level | aria-level of the subtitle element.",
          "values": [
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" }
          ]
        },
        {
          "name": "modal",
          "description": "Indicates the element is modal. When modal, user mouse interaction will be limited to the contents of the element by a modal overlay. Clicks on the overlay will cause the dialog to emit a \"dismiss\" event.",
          "values": []
        },
        {
          "name": "hidden",
          "description": "The hidden state of the element.",
          "values": []
        },
        {
          "name": "no-focus-trap",
          "description": "Indicates whether or not the dialog should trap focus.",
          "values": []
        },
        {
          "name": "trigger-id",
          "description": "The id of the trigger element, so the focus can return to this element when the dialog is closed.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-dialog--docs"
        }
      ]
    },
    {
      "name": "saf-disclosure",
      "description": "A Disclosure Custom HTML Element. Based largely on the {@link https://w3c.github.io/aria-practices/#disclosure | disclosure element }.\n---\n\n\n### **Events:**\n - **toggle** - fires a toggle event when the summary is toggled\n\n### **Methods:**\n - **show(): _void_** - Show extra content.\n- **hide(): _void_** - Hide extra content.\n- **toggle(): _void_** - Toggle the current(expanded/collapsed) state.\n\n\n\n### **Slots:**\n - **start** - Content which can be provided before the summary content\n- **end** - Content which can be provided after the summary content\n- **title** - The summary content\n- _default_ - The default slot for the disclosure content",
      "attributes": [
        {
          "name": "expanded",
          "description": "Whether the disclosure is expanded or not.",
          "values": []
        },
        {
          "name": "summary",
          "description": "The label of the disclosure button.",
          "values": []
        },
        {
          "name": "hide-caret",
          "description": "Used to had content show and hide the caret.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-disclosure--docs"
        }
      ]
    },
    {
      "name": "saf-divider",
      "description": "A Divider Custom HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#separator | ARIA separator } or {@link https://www.w3.org/TR/wai-aria-1.1/#presentation | ARIA presentation}.\n---\n",
      "attributes": [
        {
          "name": "role",
          "description": "The permitted roles of the divider.",
          "values": [{ "name": "separator" }, { "name": "presentation" }]
        },
        {
          "name": "orientation",
          "description": "The orientation of the divider.",
          "values": [{ "name": "Orientation" }]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-divider--docs"
        }
      ]
    },
    {
      "name": "saf-drawer",
      "description": "\n---\n\n\n### **Events:**\n - **dismiss** - undefined\n- **cancel** - Fires a custom 'cancel' event when the modal overlay is clicked\n- **close** - Fires a custom 'close' event when the dialog is hidden\n\n### **Methods:**\n \n\n\n\n### **Slots:**\n - _default_ - The default slot for the dialog content\n\n### **CSS Parts:**\n - **positioning-region** - A wrapping element used to center the dialog and position the modal overlay\n- **overlay** - The modal dialog overlay\n- **control** - The dialog element",
      "attributes": [
        {
          "name": "close-aria-label",
          "description": "The aria label for screen reader saf-sr-only element in the close icon button.",
          "values": []
        },
        {
          "name": "is-header",
          "description": "Determines whether header appears in the drawer.",
          "values": []
        },
        {
          "name": "is-footer",
          "description": "Determines whether footer appears in the drawer.",
          "values": []
        },
        {
          "name": "drawer-title",
          "description": "Drawer title heading",
          "values": []
        },
        {
          "name": "aria-title-level",
          "description": "Configures the https://www.w3.org/TR/wai-aria-1.1/#aria-level | aria-level of the heading element.",
          "values": [
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" }
          ]
        },
        {
          "name": "drawer-subtitle",
          "description": "Drawer subtitle heading",
          "values": []
        },
        {
          "name": "aria-subtitle-level",
          "description": "Configures the https://www.w3.org/TR/wai-aria-1.1/#aria-level | aria-level of the heading element.",
          "values": [
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" }
          ]
        },
        {
          "name": "modal",
          "description": "Indicates the element is modal. When modal, user mouse interaction will be limited to the contents of the element by a modal overlay.  Clicks on the overlay will cause the drawer to emit a \"dismiss\" event.",
          "values": []
        },
        {
          "name": "hidden",
          "description": "The hidden state of the element.",
          "values": []
        },
        {
          "name": "placement",
          "description": "Determines the drawer placement.",
          "values": [{ "name": "right" }, { "name": "bottom" }]
        },
        {
          "name": "a11y-aria-label",
          "description": "Attribute used to pass aria label to drawer when a drawer-title is not present.",
          "values": []
        },
        {
          "name": "no-focus-trap",
          "description": "Indicates whether or not the drawer should trap focus.",
          "values": []
        },
        {
          "name": "trigger-id",
          "description": "The id of the trigger element, so the focus can return to this element when the dialog is closed.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-drawer--docs"
        }
      ]
    },
    {
      "name": "saf-empty-state",
      "description": "A class for EmptyState\n---\n",
      "attributes": [
        {
          "name": "empty-state-title",
          "description": "The title of the empty state.",
          "values": []
        },
        {
          "name": "is-center",
          "description": "Whether the content is centered or not.",
          "values": []
        },
        {
          "name": "aria-title-level",
          "description": "The heading level for the title.",
          "values": [
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-empty-state--docs"
        }
      ]
    },
    {
      "name": "saf-faceted-filter",
      "description": "\n---\n",
      "attributes": [
        {
          "name": "filter-title",
          "description": "Heading for filtering.",
          "values": []
        },
        {
          "name": "reset-button-label",
          "description": "Label for the reset button.",
          "values": []
        },
        {
          "name": "aria-title-level",
          "description": "Hierarchical level of the Title element.",
          "values": [
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" }
          ]
        },
        {
          "name": "filter-subtitle",
          "description": "Secondary heading for filtering.",
          "values": []
        },
        {
          "name": "aria-subtitle-level",
          "description": "Hierarchical level of the Subtitle element.",
          "values": [
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" }
          ]
        },
        {
          "name": "instructional-text",
          "description": "Provides additional instructional text for extra guidance for filtering.",
          "values": []
        },
        {
          "name": "show-counter-badges",
          "description": "Determines whether or not the selected items counter badges should be displayed.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-faceted-filter--docs"
        }
      ]
    },
    {
      "name": "saf-file-upload",
      "description": "A class for FileUpload\n---\n",
      "attributes": [
        {
          "name": "status",
          "description": "The status of the file upload",
          "values": [
            { "name": "paused" },
            { "name": "info" },
            { "name": "error" },
            { "name": "success" },
            { "name": "warning" }
          ]
        },
        {
          "name": "file-name",
          "description": "Name of the file(s) being uploaded",
          "values": []
        },
        {
          "name": "progress-value",
          "description": "The progress value of the file upload.",
          "values": []
        },
        {
          "name": "validation-message",
          "description": "The message displayed when the file is uploaded or not.",
          "values": []
        },
        {
          "name": "file-types-text",
          "description": "The text describing the allowed file types.",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "Provides additional instructional text that provides extra guidance for the `file upload`",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-file-upload--docs"
        }
      ]
    },
    {
      "name": "saf-flipper",
      "description": "A Flipper Custom HTML Element.\nFlippers are a form of button that implies directional content navigation, such as in a carousel.\n---\n\n\n### **Events:**\n - **click** - Fires a custom 'click' event when Enter or Space is invoked via keyboard and the flipper is exposed to assistive technologies.\n\n### **Methods:**\n - **keyupHandler(e: _Event & KeyboardEvent_)** - Simulate a click event when the flipper has focus and the user hits enter or space keys\nBlur focus if the user hits escape key\n\n### **Slots:**\n - **next** - The next flipper content\n- **previous** - The previous flipper content\n\n### **CSS Parts:**\n - **next** - Wraps the next flipper content\n- **previous** - Wraps the previous flipper content",
      "attributes": [
        {
          "name": "disabled",
          "description": "Disables the flipper component.",
          "values": []
        },
        {
          "name": "aria-hidden",
          "description": "Indicates the flipper should be hidden from assistive technology.\nBecause flippers are often supplementary navigation, they are often hidden from assistive technology.",
          "values": []
        },
        {
          "name": "direction",
          "description": "Sets the direction of the flipper",
          "values": [{ "name": "next" }, { "name": "previous" }]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-flipper--docs"
        }
      ]
    },
    {
      "name": "saf-footer",
      "description": "\n---\n",
      "attributes": [
        {
          "name": "product-name",
          "description": "The name of the product.",
          "values": []
        },
        {
          "name": "a11y-aria-label-anchor-group",
          "description": "The aria label for the anchor group section. This appears on the `nav` element for anchor group links.",
          "values": []
        },
        {
          "name": "a11y-aria-label-social-icons",
          "description": "The aria label for the social icons section. This appears on the `nav` element for social icons.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-footer--docs"
        }
      ]
    },
    {
      "name": "saf-icon",
      "description": "A class for Icon\n---\n",
      "attributes": [
        {
          "name": "appearance",
          "description": "The appearance of the icon. This will be applied to the `fa-` class. `light`, `solid`, `brands`. When `light` or `solid` is selected, `fa-` and `fa-sharp` classes will be added.",
          "values": [
            { "name": "light" },
            { "name": "solid" },
            { "name": "brands" }
          ]
        },
        {
          "name": "icon-name",
          "description": "The font awesome icon name value indicated by the `icon-name` attribute. This will be applied to the `fa-` class.",
          "values": []
        },
        {
          "name": "size",
          "description": "The size in pixels of the icon. This only applies to SVG icons.",
          "values": []
        },
        {
          "name": "size-unit",
          "description": "Determines the unit of the size attribute.",
          "values": [{ "name": "em" }, { "name": "px" }, { "name": "rem" }]
        },
        {
          "name": "color",
          "description": "Color of the icon. Uses `currentColor` to inherit the parent value by default. Override with a CSS value like keyword, HEX, RGB, RGBA, HSL, HSLA.",
          "values": []
        },
        {
          "name": "colorType",
          "values": [{ "name": "fill" }, { "name": "outline" }]
        },
        {
          "name": "aria-labelledby",
          "description": "Identifies the element (or elements) that labels the current element.",
          "values": []
        },
        {
          "name": "aria-label",
          "description": "Defines a string value that labels the current element.",
          "values": []
        },
        {
          "name": "presentation",
          "description": "Controls the `role` and `aria-hidden` attributes\nIf set to `true`, `role` will be set to `presentation`, and `aria-hidden` will be set to `true`\nIf set to `false`, `role` will be set to `img`, and `aria-hidden` will be set to `false`",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-icon--docs"
        }
      ]
    },
    {
      "name": "saf-layout-grid",
      "description": "\n---\n",
      "attributes": [
        {
          "name": "justify-content",
          "description": "Justify the grid contents horizontally. Styling default is `start`.",
          "values": [
            { "name": "start" },
            { "name": "center" },
            { "name": "end" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-layout-grid--docs"
        }
      ]
    },
    {
      "name": "saf-list",
      "description": "A class for List\n---\n",
      "attributes": [
        {
          "name": "order",
          "description": "The type of list.",
          "values": [{ "name": "unordered" }, { "name": "ordered" }]
        },
        {
          "name": "size",
          "description": "The size of the list text.",
          "values": [
            { "name": "large" },
            { "name": "medium" },
            { "name": "small" }
          ]
        },
        {
          "name": "list-style",
          "description": "The visual style for the list.",
          "values": [
            { "name": "circle" },
            { "name": "decimal" },
            { "name": "disc" },
            { "name": "lower-alpha" },
            { "name": "none" },
            { "name": "lower-roman" },
            { "name": "square" },
            { "name": "ticked" }
          ]
        },
        {
          "name": "inline",
          "description": "Determines if the list is inline.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-list--docs"
        }
      ]
    },
    {
      "name": "saf-listbox-abstract",
      "description": "A Listbox Custom HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#listbox | ARIA listbox }.\n---\n\n\n### **Methods:**\n - **slottedOptionFilter(n: _HTMLElement_)** - A static filter to include only selectable options.\n- **setSelectedOptions()** - Sets an option as selected and gives it focus.\n\n### **Slots:**\n - _default_ - The default slot for the listbox options",
      "attributes": [
        {
          "name": "disabled",
          "description": "The disabled state of the listbox.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-listbox-abstract--docs"
        }
      ]
    },
    {
      "name": "saf-delegates-arialistbox",
      "description": "Includes ARIA states and properties relating to the ARIA listbox role\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-delegates-arialistbox--docs"
        }
      ]
    },
    {
      "name": "saf-listbox",
      "description": "A Listbox Custom HTML Element. Implements the {@link https://w3c.github.io/aria/#listbox | ARIA listbox }.\n---\n\n\n### **Methods:**\n - **setSelectedOptions()** - Sets an option as selected and gives it focus.\n- **slottedOptionFilter(n: _HTMLElement_)** - A static filter to include only selectable options.\n\n### **Slots:**\n - _default_ - The default slot for the listbox options",
      "attributes": [
        {
          "name": "multiple",
          "description": "Indicates if the listbox is in multi-selection mode.",
          "values": []
        },
        {
          "name": "aria-labelledby",
          "description": "Identifies the element (or elements) that labels the current element.",
          "values": []
        },
        {
          "name": "aria-label",
          "description": "Defines a string value that labels the current element.",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-listbox--docs"
        }
      ]
    },
    {
      "name": "saf-logo",
      "description": "A class for Logo\n---\n",
      "attributes": [
        {
          "name": "appearance",
          "description": "Determines the visual appearance of the logo.",
          "values": [
            { "name": "full-color" },
            { "name": "2-color-reversed" },
            { "name": "1-color-reversed" },
            { "name": "1-color-black" },
            { "name": "1-color-orange" }
          ]
        },
        {
          "name": "product-name",
          "description": "Text for the product name.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-logo--docs"
        }
      ]
    },
    {
      "name": "saf-menu",
      "description": "A Menu Custom HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#menu | ARIA menu }.\n---\n\n\n### **Methods:**\n - **focus(): _void_** - Focuses the first item in the menu.\n- **collapseExpandedItem(): _void_** - Collapses any expanded menu items.\n\n### **Slots:**\n - _default_ - The default slot for the menu items",
      "attributes": [
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "hidden",
          "description": "Whether the menu is hidden or not",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-menu--docs"
        }
      ]
    },
    {
      "name": "saf-message-box",
      "description": "A class for MessageBox\n---\n",
      "attributes": [
        {
          "name": "appearance",
          "description": "Determines the appearance of the message box user.",
          "values": [{ "name": "agent" }, { "name": "user" }]
        },
        {
          "name": "hide-avatar",
          "description": "Hides default `agent` and `user` avatar components in message. It doesn't affect any slotted custom avatar.",
          "values": []
        },
        {
          "name": "user-label",
          "description": "Sets the label for the avatar or user image. If appearance is agent then, the default value Thomson Reuters.",
          "values": []
        },
        {
          "name": "avatar-presentation",
          "description": "The option to enable or disable presentation in the contained Avatar component.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-message-box--docs"
        }
      ]
    },
    {
      "name": "saf-metadata",
      "description": "A class for Metadata, based on concepts in FASTBreadcrumb\n---\n",
      "attributes": [
        {
          "name": "size",
          "description": "Determines metadata text size.",
          "values": [{ "name": "sm" }, { "name": "xs" }]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-metadata--docs"
        }
      ]
    },
    {
      "name": "saf-number-field",
      "description": "A class derived from the NumberField foundation component\n---\n\n\n### **Methods:**\n - **stepUp(): _void_** - Increments the value using the step value\n- **stepDown(): _void_** - Decrements the value using the step value\n- **select(): _void_** - Selects all the text in the number field",
      "attributes": [
        {
          "name": "readonly",
          "description": "When true, the control will be immutable by user interaction.",
          "values": []
        },
        {
          "name": "autofocus",
          "description": "Indicates that this element should get focus after the page finishes loading.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefautofocus | autofocus HTML attribute\nfor more information.",
          "values": []
        },
        {
          "name": "hide-step",
          "description": "When true, spin buttons will not be rendered",
          "values": []
        },
        {
          "name": "placeholder",
          "description": "Sets the placeholder value of the element, generally used to provide a hint to the user.",
          "values": []
        },
        {
          "name": "list",
          "description": "Allows associating a https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist | datalist\nto the element by https://developer.mozilla.org/en-US/docs/Web/API/Element/id.",
          "values": []
        },
        {
          "name": "maxlength",
          "description": "The maximum number of characters a user can enter.",
          "values": []
        },
        {
          "name": "minlength",
          "description": "The minimum number of characters a user can enter.",
          "values": []
        },
        {
          "name": "size",
          "description": "Sets the width of the element to a specified number of characters.",
          "values": []
        },
        {
          "name": "step",
          "description": "Amount to increment or decrement the value by",
          "values": []
        },
        {
          "name": "max",
          "description": "The maximum the value can be",
          "values": []
        },
        {
          "name": "min",
          "description": "The minimum the value can be",
          "values": []
        },
        {
          "name": "label",
          "description": "Text that describes the input.",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "Provides additional instructional text that provides extra guidance for the input.",
          "values": []
        },
        {
          "name": "optional-text",
          "description": "Provides additional optional text to the label. Accepts any text but intended to indicate `(Required)` or `(Optional)`.",
          "values": []
        },
        {
          "name": "invalid",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "values": []
        },
        {
          "name": "validation-message",
          "description": "The message displayed when the control is valid or invalid.",
          "values": []
        },
        {
          "name": "is-success",
          "description": "Specifies that the control is valid and that a success message should display.",
          "values": []
        },
        {
          "name": "success-aria-label",
          "description": "Defines a string value that labels the success icon, when icons are not just presentational but used to communicate status.",
          "values": []
        },
        {
          "name": "error-aria-label",
          "description": "Defines a string value that labels the error icon, when icons are not just presentational but used to communicate status.",
          "values": []
        },
        {
          "name": "required-text",
          "description": "Adds additional character to the label when number-field is required.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "A description for the number input that is only visible to screen readers, passed to a hidden span element, connected to the input via aria-describedby.",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "autocomplete",
          "description": "Controls <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\">browser autofill</a> behavior.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-number-field--docs"
        }
      ]
    },
    {
      "name": "saf-option",
      "description": "An Option Custom HTML Element. Implements {@link https://www.w3.org/TR/wai-aria-1.1/#option | ARIA option }.\n---\n\n\n### **Methods:**\n - **checkedChanged(prev: _boolean | unknown_, next: _boolean_): _void_** - Updates the ariaChecked property when the checked property changes.\n\n### **Slots:**\n - **start** - Content which can be provided before the listbox option content\n- **end** - Content which can be provided after the listbox option content\n- _default_ - The default slot for listbox option content\n\n### **CSS Parts:**\n - **content** - Wraps the listbox option content",
      "attributes": [
        {
          "name": "disabled",
          "description": "The disabled state of the option.",
          "values": []
        },
        {
          "name": "selected",
          "description": "The selected attribute value. This sets the initial selected value.",
          "values": []
        },
        {
          "name": "value",
          "description": "The initial value of the option. This value sets the `value` property\nonly when the `value` property has not been explicitly set.",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-option--docs"
        }
      ]
    },
    {
      "name": "saf-delegates-arialistbox-option",
      "description": "States and properties relating to the ARIA `option` role.\n---\n",
      "attributes": [
        {
          "name": "aria-checked",
          "description": "Indicates the current \"checked\" state.",
          "values": [{ "name": "true" }, { "name": "false" }]
        },
        {
          "name": "aria-posinset",
          "description": "Defines an element's number or position in the current set of listitems.",
          "values": []
        },
        {
          "name": "aria-selected",
          "description": "Indicates the current \"selected\" state.",
          "values": [{ "name": "true" }, { "name": "false" }]
        },
        {
          "name": "aria-setsize",
          "description": "Defines the number of items in the current set of listitems.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-delegates-arialistbox-option--docs"
        }
      ]
    },
    {
      "name": "saf-pagination",
      "description": "A class for Pagination\n---\n\n\n### **Methods:**\n - **previous()** - Go to previous page\n- **next()** - Go to next page",
      "attributes": [
        {
          "name": "aria-label",
          "description": "The aria label for the region called pagination.",
          "values": []
        },
        {
          "name": "page-results-label",
          "description": "Text for the results label.",
          "values": []
        },
        {
          "name": "page-of-label",
          "description": "Text for the page **of** label.",
          "values": []
        },
        {
          "name": "previous-button",
          "description": "Text for the previous button.",
          "values": []
        },
        {
          "name": "next-button",
          "description": "Text for the next button.",
          "values": []
        },
        {
          "name": "results-label",
          "description": "Text for the **results** label.",
          "values": []
        },
        {
          "name": "to-label",
          "description": "Text for the **to** label.",
          "values": []
        },
        {
          "name": "items-input-label",
          "description": "Text for select items field.",
          "values": []
        },
        {
          "name": "page-input-label",
          "description": "Text for the page input label.",
          "values": []
        },
        {
          "name": "page-button",
          "description": "Text for the page button.",
          "values": []
        },
        {
          "name": "has-border",
          "description": "Whether or not the component has a border, showing by default.",
          "values": []
        },
        {
          "name": "total-item-count",
          "description": "Total number of results.",
          "values": []
        },
        {
          "name": "current-page-index",
          "description": "The current page index.",
          "values": []
        },
        {
          "name": "items-per-page",
          "description": "Number of items per page.",
          "values": []
        },
        {
          "name": "data-aria-live",
          "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assisitve technologies, and user can expect from the live region.",
          "values": [
            { "name": "off" },
            { "name": "polite" },
            { "name": "assertive" }
          ]
        },
        {
          "name": "items-label",
          "description": "Text to describe the results.",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "controlled",
          "description": "The `controlled` mode will make the component to just read attributes and emit events. The state\nshould be handled by the end user. This is also known as `stateless` components in React\nor `Props down, Events up` in Vue.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-pagination--docs"
        }
      ]
    },
    {
      "name": "saf-product-header",
      "description": "A class for ProductHeader\n---\n",
      "attributes": [
        {
          "name": "global-aria-label",
          "description": "The text of `aria-label` for the global navigation (right).",
          "values": []
        },
        {
          "name": "tasks-aria-label",
          "description": "The text of `aria-label` for the product navigation (left).",
          "values": []
        },
        { "name": "is-menu-open", "values": [] },
        { "name": "has-menu-items", "values": [] }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-product-header--docs"
        }
      ]
    },
    {
      "name": "saf-progress",
      "description": "An Progress HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#progressbar | ARIA progressbar }.\n---\n\n\n### **Slots:**\n - **indeterminate** - The slot for a custom indeterminate indicator\n\n### **CSS Parts:**\n - **progress** - Represents the progress element\n- **determinate** - The determinate indicator\n- **indeterminate** - The indeterminate indicator",
      "attributes": [
        {
          "name": "value",
          "description": "The value of the progress",
          "values": []
        },
        { "name": "min", "description": "The minimum value", "values": [] },
        { "name": "max", "description": "The maximum value", "values": [] },
        {
          "name": "status-color",
          "description": "Applies status appearance colors matching status component",
          "values": [
            { "name": "error" },
            { "name": "loading" },
            { "name": "paused" },
            { "name": "success" }
          ]
        },
        {
          "name": "message",
          "description": "`Deprecated`. Doesn't do anything. Will be removed in v4.",
          "values": []
        },
        {
          "name": "color",
          "description": "`Deprecated`. Doesn't do anything. Will be removed in v4.",
          "values": []
        },
        {
          "name": "indeterminate",
          "description": "Determines if the progress bar is indeterminate.",
          "values": []
        },
        {
          "name": "complete-label",
          "description": "The text that appears beside the % loading complete number - Useful for translations.",
          "values": []
        },
        {
          "name": "headinglabel",
          "description": "`Deprecated`. Doesn't do anything. Will be removed in v4.",
          "values": []
        },
        {
          "name": "aria-label",
          "description": "Defines a string value that labels the current element.",
          "values": []
        },
        {
          "name": "label",
          "description": "Optional text to show kind of request being processed, should reflect the state of the progress.",
          "values": []
        },
        {
          "name": "aria-valuenow",
          "description": "Represents the current value of the progress indicator for accessibility purposes.",
          "values": []
        },
        {
          "name": "aria-valuemin",
          "description": "Represents the minimum value of the progress indicator for accessibility purposes.",
          "values": []
        },
        {
          "name": "aria-valuemax",
          "description": "Represents the maximum value of the progress indicator for accessibility purposes.",
          "values": []
        },
        {
          "name": "aria-labelledby",
          "description": "The ID of the element that labels the progress component.\nThis is used to set the `aria-labelledby` attribute for accessibility purposes.",
          "values": []
        },
        {
          "name": "paused",
          "description": "Indicates whether the progress component is paused.\nWhen set to true, the progress animation will be paused.",
          "values": []
        },
        {
          "name": "announce",
          "description": "Cause progress to be announced dynamically by assistive technologies.",
          "values": []
        },
        {
          "name": "completion-message",
          "description": "Message to be announced by assistive technology when the progress is complete. This will be announced when the `complete` property is set to true or when the progress value reaches the max value.",
          "values": []
        },
        {
          "name": "complete",
          "description": "Indicates that the progress is complete. Setting this to true manually triggers completion announcement for assistive technologies. (user must also set `completion-message` attribute).",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-progress--docs"
        }
      ]
    },
    {
      "name": "saf-progress-ring",
      "description": "An circular Progress HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#progressbar | ARIA progressbar }.\n---\n\n\n### **Slots:**\n - **indeterminate** - The slot for a custom indeterminate indicator\n- **determinate** - The slot for a custom determinate indicator\n\n### **CSS Parts:**\n - **progress** - Represents the progress element\n- **determinate** - The determinate indicator\n- **background** - The background\n- **indeterminate** - The indeterminate indicator",
      "attributes": [
        {
          "name": "progress-size",
          "description": "Determines progress ring size.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "complete-label",
          "description": "The text that follows the loading complete number % in message announcements - Useful for translations",
          "values": []
        },
        {
          "name": "value",
          "description": "The value of the progress",
          "values": []
        },
        {
          "name": "status-color",
          "description": "Applies status appearance colors matching status component",
          "values": [
            { "name": "error" },
            { "name": "loading" },
            { "name": "paused" },
            { "name": "success" }
          ]
        },
        {
          "name": "message",
          "description": "`Deprecated`. Doesn't do anything. Will be removed in v4.",
          "values": []
        },
        {
          "name": "color",
          "description": "`Deprecated`. Doesn't do anything. Will be removed in v4.",
          "values": []
        },
        {
          "name": "indeterminate",
          "description": "Determines if the progress bar is indeterminate.",
          "values": []
        },
        {
          "name": "headinglabel",
          "description": "`Deprecated`. Doesn't do anything. Will be removed in v4.",
          "values": []
        },
        {
          "name": "aria-label",
          "description": "Defines a string value that labels the current element.",
          "values": []
        },
        {
          "name": "label",
          "description": "Optional text to show kind of request being processed, should reflect the state of the progress.",
          "values": []
        },
        {
          "name": "aria-valuenow",
          "description": "Represents the current value of the progress indicator for accessibility purposes.",
          "values": []
        },
        {
          "name": "aria-valuemin",
          "description": "Represents the minimum value of the progress indicator for accessibility purposes.",
          "values": []
        },
        {
          "name": "aria-valuemax",
          "description": "Represents the maximum value of the progress indicator for accessibility purposes.",
          "values": []
        },
        {
          "name": "aria-labelledby",
          "description": "The ID of the element that labels the progress component.\nThis is used to set the `aria-labelledby` attribute for accessibility purposes.",
          "values": []
        },
        {
          "name": "announce",
          "description": "Cause progress to be announced dynamically by assistive technologies.",
          "values": []
        },
        {
          "name": "completion-message",
          "description": "Message to be announced by assistive technology when the progress is complete. This will be announced when the `complete` property is set to true or when the progress value reaches the max value.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-progress-ring--docs"
        }
      ]
    },
    {
      "name": "saf-progress-text",
      "description": "A class for ProgressText component\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-progress-text--docs"
        }
      ]
    },
    {
      "name": "saf-radio-group",
      "description": "An Radio Group Custom HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#radiogroup | ARIA radiogroup }.\n---\n\n\n### **Events:**\n - **change** - Fires a custom 'change' event when the value changes\n\n### **Slots:**\n - **label** - The slot for the label\n- _default_ - The default slot for radio buttons\n\n### **CSS Parts:**\n - **positioning-region** - The positioning region for laying out the radios",
      "attributes": [
        {
          "name": "readonly",
          "description": "When true, the child radios will be immutable by user interaction.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly | readonly HTML attribute for more information.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables the radio group and child radios.",
          "values": []
        },
        {
          "name": "name",
          "description": "The name of the radio group. Setting this value will set the name value\nfor all child radio elements.",
          "values": []
        },
        {
          "name": "value",
          "description": "The initial checked value of the control.",
          "values": []
        },
        {
          "name": "orientation",
          "description": "The orientation of the group",
          "values": [{ "name": "Orientation" }]
        },
        {
          "name": "required",
          "description": "Indicates the radio group must have a selected value before the form will submit.",
          "values": []
        },
        {
          "name": "label",
          "description": "Text that describes the radio group.",
          "values": []
        },
        {
          "name": "a11y-aria-label",
          "description": "Define the accessible name of the radio group. Overrides the visible label for assistive technologies.",
          "values": []
        },
        {
          "name": "required-text",
          "description": "Adds additional character to the label when radio-group is required.",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "Provides additional instructional text for extra guidance for the radio group.",
          "values": []
        },
        {
          "name": "optional-text",
          "description": "Provides additional optional text to the label. Accepts any text but intended to indicate `(Required)` or `(Optional)`",
          "values": []
        },
        {
          "name": "optional-text-visible",
          "description": "Indicates the optional text should be rendered visible or just availble to screen readers",
          "values": []
        },
        {
          "name": "invalid",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "values": []
        },
        {
          "name": "validation-message",
          "description": "The message displayed when the control is valid or invalid.",
          "values": []
        },
        {
          "name": "error-aria-label",
          "description": "Defines a string value that labels the error icon, when icons are not just presentational but used to communicate status.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-radio-group--docs"
        }
      ]
    },
    {
      "name": "saf-responsive-element",
      "description": "A base class for creating responsive elements.\nMeant to be used as a mixin\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-responsive-element--docs"
        }
      ]
    },
    {
      "name": "saf-search-field",
      "description": "A Search Custom HTML Element. Based largely on the {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/search | <input type=\"search\" /> element }.\n---\n\n\n### **Methods:**\n - **handleClearInput(): _void_** - Clears the value, focuses the input field and emits a `clear` event.\n- **search(): _void_** - Handle click on search\n\n### **Slots:**\n - **start** - Content which can be provided before the search input\n- **end** - Content which can be provided after the search clear button\n- _default_ - The default slot for the label\n- **clear-button** - The clear button\n- **clear-icon** - The clear icon\n\n### **CSS Parts:**\n - **label** - The label\n- **control** - The logical control, the element wrapping the input field, including start and end slots\n- **field** - The element representing the input field\n- **clear-button** - The button to clear the input",
      "attributes": [
        {
          "name": "readonly",
          "description": "When true, the control will be immutable by user interaction.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly | readonly HTML attribute for more information.",
          "values": []
        },
        {
          "name": "autofocus",
          "description": "Indicates that this element should get focus after the page finishes loading.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefautofocus | autofocus HTML attribute\nfor more information.",
          "values": []
        },
        {
          "name": "placeholder",
          "description": "Sets the placeholder value of the element, generally used to provide a hint to the user.",
          "values": []
        },
        {
          "name": "list",
          "description": "Allows associating a https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist | datalist\nto the element by https://developer.mozilla.org/en-US/docs/Web/API/Element/id.",
          "values": []
        },
        {
          "name": "maxlength",
          "description": "The maximum number of characters a user can enter.",
          "values": []
        },
        {
          "name": "minlength",
          "description": "The minimum number of characters a user can enter.",
          "values": []
        },
        {
          "name": "pattern",
          "description": "A regular expression that the value must match to pass validation.",
          "values": []
        },
        {
          "name": "size",
          "description": "Sets the width of the element to a specified number of characters.",
          "values": []
        },
        {
          "name": "spellcheck",
          "description": "Controls whether or not to enable spell checking for the input field, or if the default spell checking configuration should be used.",
          "values": []
        },
        { "name": "id", "description": "The item ID", "values": [] },
        {
          "name": "label",
          "description": "Text that describes the input",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "Provides additional instructional text for extra guidance for the search field.",
          "values": []
        },
        {
          "name": "search-button-label",
          "description": "'Label for the search button tooltip.",
          "values": []
        },
        {
          "name": "search-clear-label",
          "description": "Label for the clear button tooltip.",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "a11y-aria-description",
          "description": "A description for the search field that is only visible to screen readers.",
          "values": []
        },
        {
          "name": "clear-button-tooltip-placement",
          "description": "Position of the clear button tooltip.",
          "values": [
            { "name": "top" },
            { "name": "top-start" },
            { "name": "top-end" },
            { "name": "bottom" },
            { "name": "bottom-start" },
            { "name": "bottom-end" },
            { "name": "right" },
            { "name": "left" }
          ]
        },
        {
          "name": "search-button-tooltip-placement",
          "description": "Position of the search button tooltip.",
          "values": [
            { "name": "top" },
            { "name": "top-start" },
            { "name": "top-end" },
            { "name": "bottom" },
            { "name": "bottom-start" },
            { "name": "bottom-end" },
            { "name": "right" },
            { "name": "left" }
          ]
        },
        {
          "name": "hide-search-button-tooltip",
          "description": "Whether or not the search button tooltip is shown.",
          "values": []
        },
        {
          "name": "autocomplete",
          "description": "Controls <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\">browser autofill</a> behavior. (Ex: `off`, `on`, `name`, `email`) `string`",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-search-field--docs"
        }
      ]
    },
    {
      "name": "saf-delegates-ariasearch",
      "description": "Includes ARIA states and properties relating to the ARIA textbox role\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-delegates-ariasearch--docs"
        }
      ]
    },
    {
      "name": "saf-select",
      "description": "A Select Custom HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#select | ARIA select }.\n---\n\n\n### **Events:**\n - **input** - Fires a custom 'input' event when the value updates\n- **change** - Fires a custom 'change' event when the value updates\n\n### **Methods:**\n - **multipleChanged(prev: _boolean | undefined_, next: _boolean_)** - Sets the multiple property on the proxy element.\n- **setSelectedOptions()** - Sets an option as selected and gives it focus.\n- **slottedOptionFilter(n: _HTMLElement_)** - A static filter to include only selectable options.\n\n### **Slots:**\n - **start** - Content which can be provided before the button content\n- **end** - Content which can be provided after the button content\n- **button-container** - The element representing the select button\n- **selected-value** - The selected value\n- **indicator** - The visual indicator for the expand/collapse state of the button\n- _default_ - The default slot for slotted options\n\n### **CSS Parts:**\n - **control** - The element representing the select invoking element\n- **selected-value** - The element wrapping the selected value\n- **indicator** - The element wrapping the visual indicator\n- **listbox** - The listbox element",
      "attributes": [
        {
          "name": "open",
          "description": "Whether or not the listbox is open.",
          "values": []
        },
        {
          "name": "id",
          "description": "The id attribute of the input element.",
          "values": []
        },
        {
          "name": "required",
          "description": "A value is required or must be checked for the form to be submittable.",
          "values": []
        },
        {
          "name": "label",
          "description": "Text that describes the select component.",
          "values": []
        },
        {
          "name": "select-aria-label",
          "description": "The combobox aria label.",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "Provides additional instructional text that provides extra guidance for the select component.",
          "values": []
        },
        {
          "name": "required-text",
          "description": "Adds additional character to the label when select is required.",
          "values": []
        },
        {
          "name": "optional-text",
          "description": "Provides additional optional text to the label. Accepts any text but intended to indicate `(Required)` or `(Optional)`.",
          "values": []
        },
        {
          "name": "invalid",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "values": []
        },
        {
          "name": "validation-message",
          "description": "The message displayed when the control is valid or invalid.",
          "values": []
        },
        {
          "name": "is-success",
          "description": "Specifies that the control is valid and that a success message should display.",
          "values": []
        },
        {
          "name": "success-aria-label",
          "description": "'Defines a string value that labels the success icon, when icons are not just presentational but used to communicate status.",
          "values": []
        },
        {
          "name": "error-aria-label",
          "description": "Defines a string value that labels the error icon, when icons are not just presentational but used to communicate status.",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "autocomplete",
          "description": "Controls <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\">browser aut",
          "values": []
        },
        {
          "name": "typed-timeout",
          "description": "Timeout ms for keydown event capture string and select value.",
          "values": []
        },
        {
          "name": "aria-labelledby",
          "description": "Identifies the element (or elements) that labels the current element.",
          "values": []
        },
        {
          "name": "aria-label",
          "description": "Defines a string value that labels the current element.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-select--docs"
        }
      ]
    },
    {
      "name": "saf-delegates-ariaselect",
      "description": "Includes ARIA states and properties relating to the ARIA select role.\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-delegates-ariaselect--docs"
        }
      ]
    },
    {
      "name": "saf-side-nav",
      "description": "A class for Sidebar navigation\n---\n\n\n### **Events:**\n - **cancel** - Fires a custom 'cancel' event when the modal overlay is clicked\n- **close** - Fires a custom 'close' event when the dialog is hidden\n\n### **Methods:**\n - **open(): _void_** - The method to open/expand the side-nav\n- **close(): _void_** - The method to close/collapse the side-nav\n\n\n\n\n### **Slots:**\n - _default_ - The default slot for the dialog content\n\n### **CSS Parts:**\n - **positioning-region** - A wrapping element used to center the dialog and position the modal overlay\n- **overlay** - The modal dialog overlay\n- **control** - The dialog element",
      "attributes": [
        {
          "name": "state",
          "description": "Whether the side nav is expanded or collapsed.",
          "values": [{ "name": "closed" }, { "name": "open" }]
        },
        {
          "name": "open-icon-name",
          "description": "The `icon-name` for the expand button when side nav is open.",
          "values": []
        },
        {
          "name": "close-icon-name",
          "description": "The `icon-name` for the expand button when side nav is closed.",
          "values": []
        },
        {
          "name": "aria-label",
          "description": "Defines a string value that labels the current element.",
          "values": []
        },
        {
          "name": "close-aria-label",
          "description": "The label for the expand button when side nav is open.",
          "values": []
        },
        {
          "name": "open-aria-label",
          "description": "The label for the expand button when side nav is closed.",
          "values": []
        },
        {
          "name": "trigger-id",
          "description": "The id of the trigger element, so the focus can return to this element when the dialog is closed.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-side-nav--docs"
        }
      ]
    },
    {
      "name": "saf-skeleton",
      "description": "A Skeleton Custom HTML Element.\n---\n\n\n### **Slots:**\n - _default_ - The default slot",
      "attributes": [
        {
          "name": "fill",
          "description": "Indicates the Skeleton should have a filled style.",
          "values": []
        },
        {
          "name": "shape",
          "description": "Indicates what the shape of the Skeleton should be.",
          "values": [{ "name": "rect" }, { "name": "circle" }]
        },
        {
          "name": "pattern",
          "description": "Defines the pattern URL for the skeleton.",
          "values": []
        },
        {
          "name": "shimmer",
          "description": "Toggles the loading effect in skeleton elements.",
          "values": []
        },
        {
          "name": "appearance",
          "description": "Select skeleton type (eg. small, large, table)",
          "values": [
            { "name": "small" },
            { "name": "large" },
            { "name": "table" }
          ]
        },
        {
          "name": "background",
          "description": "Select the background type (eg. transparent or card)",
          "values": [{ "name": "transparent" }, { "name": "card" }]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-skeleton--docs"
        }
      ]
    },
    {
      "name": "saf-skip-link",
      "description": "A class for SkipLink\n---\n\n\n### **Slots:**\n - **start** - Content which can be provided before the anchor content\n- **end** - Content which can be provided after the anchor content\n- _default_ - The default slot for anchor content\n\n### **CSS Parts:**\n - **control** - The anchor element\n- **content** - The element wrapping anchor content",
      "attributes": [
        {
          "name": "positioning",
          "description": "Determines the positioning of the skip link.\nIf set to 'absolute', the skip link will be positioned absolutely within its container.\nIf set to 'fixed', it will be fixed relative to the viewport.",
          "values": [{ "name": "absolute" }, { "name": "fixed" }]
        },
        {
          "name": "scroll-align-to-top",
          "description": "Determines the [scroll alignment](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView#block) when the skip link is activated.",
          "values": [
            { "name": "start" },
            { "name": "center" },
            { "name": "nearest" }
          ]
        },
        {
          "name": "download",
          "description": "Prompts the user to save the linked URL.",
          "values": []
        },
        {
          "name": "href",
          "description": "The URL the hyperlink references.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element  for more information.",
          "values": []
        },
        {
          "name": "hreflang",
          "description": "Hints at the language of the referenced resource.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element  for more information.",
          "values": []
        },
        {
          "name": "ping",
          "description": "A space-separated list of URLs. When the link is followed, the browser will send POST requests with the body PING to the URLs.",
          "values": []
        },
        {
          "name": "referrerpolicy",
          "description": "Determines how much of the referrer to send when following the link.",
          "values": []
        },
        {
          "name": "rel",
          "description": "The relationship of the linked URL as space-separated link types.",
          "values": []
        },
        {
          "name": "target",
          "description": "Determines where a link will open in browsing context.",
          "values": [
            { "name": "_self" },
            { "name": "_blank" },
            { "name": "_parent" },
            { "name": "_top" }
          ]
        },
        {
          "name": "type",
          "description": "Hints at the linked URL's format with a MIME type. No built-in functionality.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "A description for the anchor that is only visible to screen readers.",
          "values": []
        },
        {
          "name": "a11y-aria-current",
          "description": "Indicates the element that represents the current item within a container or set of related elements.",
          "values": [
            { "name": "" },
            { "name": "page" },
            { "name": "step" },
            { "name": "location" },
            { "name": "date" },
            { "name": "time" },
            { "name": "true" },
            { "name": "false" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-skip-link--docs"
        }
      ]
    },
    {
      "name": "saf-skip-link-group",
      "description": "A class for SkipLinkGroup\n---\n",
      "attributes": [
        {
          "name": "aria-label",
          "description": "The aria label for the skip link group.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-skip-link-group--docs"
        }
      ]
    },
    {
      "name": "saf-slider",
      "description": "A Slider Custom HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#slider | ARIA slider }.\n---\n\n\n### **Events:**\n - **change** - Fires a custom 'change' event when the slider value changes\n\n### **Methods:**\n - **increment(): _void_** - Increment the value by the step\n- **decrement(): _void_** - Decrement the value by the step\n- **setThumbPositionForOrientation(direction: _Direction_): _void_** - Places the thumb based on the current value\n\n### **Slots:**\n - **track** - The track of the slider\n- **track-start** - The track-start visual indicator\n- **thumb** - The slider thumb\n- _default_ - The default slot for labels\n\n### **CSS Parts:**\n - **positioning-region** - The region used to position the elements of the slider\n- **track-container** - The region containing the track elements\n- **track-start** - The element wrapping the track start slot\n- **thumb-container** - The thumb container element which is programmatically positioned",
      "attributes": [
        {
          "name": "readonly",
          "description": "When set to `true`, the user cannot interact with the slider.",
          "values": []
        },
        {
          "name": "min",
          "description": "The minimum allowed value.",
          "values": []
        },
        {
          "name": "max",
          "description": "The maximum allowed value.",
          "values": []
        },
        {
          "name": "step",
          "description": "Value to increment or decrement via arrow keys, mouse click or drag.",
          "values": []
        },
        {
          "name": "orientation",
          "description": "The orientation of the slider.",
          "values": [{ "name": "Orientation" }]
        },
        {
          "name": "mode",
          "description": "The selection mode.",
          "values": [{ "name": "single-value" }]
        },
        {
          "name": "label",
          "description": "Text that describes the slider.",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "'Provides additional instructional text that provides extra guidance for the input.",
          "values": []
        },
        {
          "name": "autocomplete",
          "description": "Controls <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\">browser autofill</a> behavior. (Ex: `off`, `on`, `name`, `email`)",
          "values": []
        },
        {
          "name": "required",
          "description": "Indicates the slider must have a value before the form will submit.",
          "values": []
        },
        {
          "name": "required-text",
          "description": "Adds additional character to the label when slider is required.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-slider--docs"
        }
      ]
    },
    {
      "name": "saf-splitter",
      "description": "A class for Splitter\n---\n\n\n### **Methods:**\n - **initialSizeChanged(prev: _number_, next: _number_): _void_** - Tracking the changes from the initialSize\n- **changeSplitterSize(percentageSize: _number_, emitEvent)** - Change splitter width",
      "attributes": [
        {
          "name": "sr-only-title",
          "description": "'Screen reader title for splitter indicator.",
          "values": []
        },
        {
          "name": "initial-size",
          "description": "Initial Size for splitter in percentage.",
          "values": []
        },
        {
          "name": "scrollable-primary",
          "description": "Whether or not primary panel should be scrollable.",
          "values": []
        },
        {
          "name": "scrollable-secondary",
          "description": "Whether or not secondary panel should be scrollable.",
          "values": []
        },
        {
          "name": "orientation",
          "description": "Controls the visual orientation of the splitter.",
          "values": [{ "name": "horizontal" }, { "name": "vertical" }]
        },
        {
          "name": "tooltip-text",
          "description": "Tooltip text for splitter.",
          "values": []
        },
        {
          "name": "width",
          "description": "Current value of the width in percentage 0 - 100",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-splitter--docs"
        }
      ]
    },
    {
      "name": "saf-sr-only",
      "description": "A class for SrOnly\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-sr-only--docs"
        }
      ]
    },
    {
      "name": "saf-status",
      "description": "A class for Status\n---\n",
      "attributes": [
        {
          "name": "message",
          "description": "The message to display.",
          "values": []
        },
        {
          "name": "status",
          "description": "Determines the status type.",
          "values": [
            { "name": "paused" },
            { "name": "info" },
            { "name": "success" },
            { "name": "error" },
            { "name": "warning" }
          ]
        },
        {
          "name": "aria-labelledby",
          "description": "Used to create an accessible name by referencing other elements.",
          "values": []
        },
        {
          "name": "focusable",
          "description": "Whether the item is focusable.",
          "values": []
        },
        {
          "name": "aria-role",
          "description": "Used to provide semantic meaning to assistive technologies.",
          "values": []
        },
        {
          "name": "paused-aria-label",
          "description": "The label for the paused icon to communicate status.",
          "values": []
        },
        {
          "name": "info-aria-label",
          "description": "The label for the info icon to communicate status.",
          "values": []
        },
        {
          "name": "success-aria-label",
          "description": "The label for the success icon to communicate status.",
          "values": []
        },
        {
          "name": "error-aria-label",
          "description": "The label for the error icon to communicate status.",
          "values": []
        },
        {
          "name": "warning-aria-label",
          "description": "The label for the warning icon to communicate status.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-status--docs"
        }
      ]
    },
    {
      "name": "saf-stepper",
      "description": "A class for Stepper\n---\n",
      "attributes": [
        {
          "name": "orientation",
          "description": "The visual orientation of the stepper.",
          "values": [{ "name": "horizontal" }, { "name": "vertical" }]
        },
        {
          "name": "aria-label",
          "description": "Defines a string value that labels the current element.",
          "values": []
        },
        {
          "name": "observe-resize",
          "description": "Whether the stepper should observe resizing of the parent element (be responsive).",
          "values": []
        },
        {
          "name": "active-step",
          "description": "Represents the currently active step in the stepper component.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-stepper--docs"
        }
      ]
    },
    {
      "name": "saf-switch",
      "description": "A Switch Custom HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#switch | ARIA switch }.\n---\n\n\n### **Events:**\n - **change** - Emits a custom change event when the checked state changes\n\n### **Slots:**\n - _default_ - The default slot for the label\n- **switch** - For content inside of the thumb\n\n### **CSS Parts:**\n - **label** - The label element\n- **switch** - The container for the switch\n- **checked-indicator** - The checked indicator element\n- **checked** - The checked icon\n- **unchecked** - The unchecked icon",
      "attributes": [
        {
          "name": "readonly",
          "description": "When true, the control will be immutable by user interaction.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly | readonly HTML attribute for more information.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-switch--docs"
        }
      ]
    },
    {
      "name": "saf-table",
      "description": "A class for Table\n---\n",
      "attributes": [
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "alternating-rows",
          "description": "Controls zebra striping, which alternates background colors in every other row.",
          "values": []
        },
        {
          "name": "inline-borders",
          "description": "Determines if vertical column borders will be visible.",
          "values": []
        },
        {
          "name": "header-background",
          "description": "Used to change the background of the table header.",
          "values": [
            { "name": "subtle" },
            { "name": "default" },
            { "name": "strong" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-table--docs"
        }
      ]
    },
    {
      "name": "saf-tabs",
      "description": "A Tabs Custom HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#tablist | ARIA tablist }.\n---\n\n\n### **Events:**\n - **change** - Fires a custom 'change' event when a tab is clicked or during keyboard navigation\n\n### **Methods:**\n - **setTabs(): _void_** - Function that is invoked whenever the selected tab or the tab collection changes.\n- **adjust(adjustment: _number_): _void_** - This method allows the active index to be adjusted programmatically by numerical increments.\n\n### **Slots:**\n - **start** - Content which can be provided before the tablist element\n- **end** - Content which can be provided after the tablist element\n- **tab** - The slot for tabs\n- **tabpanel** - The slot for tabpanels\n\n### **CSS Parts:**\n - **tablist** - The element wrapping for the tabs",
      "attributes": [
        {
          "name": "orientation",
          "description": "Controls the visual orientation of the Tabs list.",
          "values": [{ "name": "Orientation" }]
        },
        {
          "name": "activeid",
          "description": "The id of the active tab",
          "values": []
        },
        {
          "name": "a11y-aria-label",
          "description": "A description for the tablist",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-tabs--docs"
        }
      ]
    },
    {
      "name": "saf-text",
      "description": "A class for Text\n---\n",
      "attributes": [
        {
          "name": "appearance",
          "description": "Applies the visual style of the text.",
          "values": [
            { "name": "display-lg" },
            { "name": "display-sm" },
            { "name": "heading-4xl" },
            { "name": "heading-3xl" },
            { "name": "heading-2xl" },
            { "name": "heading-xl" },
            { "name": "heading-lg" },
            { "name": "heading-md" },
            { "name": "body-default-lg" },
            { "name": "body-strong-lg" },
            { "name": "body-default-md" },
            { "name": "body-strong-md" },
            { "name": "body-default-sm" },
            { "name": "body-strong-sm" },
            { "name": "body-default-xs" },
            { "name": "body-strong-xs" },
            { "name": "eyebrow-heavy-md" },
            { "name": "eyebrow-heavy-sm" }
          ]
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-text--docs"
        }
      ]
    },
    {
      "name": "saf-text-area",
      "description": "A Text Area Custom HTML Element. Based largely on the {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea | <textarea> element }.\n---\n\n\n### **Events:**\n - **change** - Emits a custom 'change' event when the textarea emits a change event\n\n### **Methods:**\n - **select(): _void_** - Selects all the text in the text area\n\n### **Slots:**\n - **start** - Content which can be provided before the text area input\n- **end** - Content which can be provided after the text area input\n- _default_ - The default slot for the label\n\n### **CSS Parts:**\n - **root** - The element wrapping the control\n- **control** - The textarea element",
      "attributes": [
        {
          "name": "readOnly",
          "description": "When true, the control will be immutable by user interaction.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly | readonly HTML attribute for more information.",
          "values": []
        },
        {
          "name": "resize",
          "description": "The resize mode of the element.",
          "values": [
            { "name": "none" },
            { "name": "both" },
            { "name": "horizontal" },
            { "name": "vertical" }
          ]
        },
        {
          "name": "autofocus",
          "description": "Indicates that this element should get focus after the page finishes loading.",
          "values": []
        },
        {
          "name": "form",
          "description": "The https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id | id\nof the https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form | form the element is associated to",
          "values": []
        },
        {
          "name": "list",
          "description": "Allows associating a https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist | datalist\nto the element by https://developer.mozilla.org/en-US/docs/Web/API/Element/id | id.",
          "values": []
        },
        {
          "name": "maxlength",
          "description": "The maximum number of characters a user can enter.",
          "values": []
        },
        {
          "name": "minlength",
          "description": "The minimum number of characters a user can enter.",
          "values": []
        },
        {
          "name": "name",
          "description": "The name of the element.",
          "values": []
        },
        {
          "name": "placeholder",
          "description": "Sets the placeholder value of the element, generally used to provide a hint to the user.",
          "values": []
        },
        {
          "name": "cols",
          "description": "Sizes the element horizontally by a number of character columns.",
          "values": []
        },
        {
          "name": "rows",
          "description": "Sizes the element vertically by a number of character rows.",
          "values": []
        },
        {
          "name": "spellcheck",
          "description": "Controls whether or not to enable spell checking for the input field, or if the default spell checking configuration should be used.",
          "values": []
        },
        {
          "name": "invalid",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "values": []
        },
        {
          "name": "label",
          "description": "Text that describes the input.",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "Provides additional instructional text that provides extra guidance for the input.",
          "values": []
        },
        {
          "name": "optional-text",
          "description": "Provides additional optional text to the label. Accepts any text but intended to indicate `(Required)` or `(Optional)`.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "A description for the textarea that is only visible to screen readers.",
          "values": []
        },
        {
          "name": "validation-message",
          "description": "The message displayed when the control is valid or invalid.",
          "values": []
        },
        {
          "name": "error-aria-label",
          "description": "Defines a string value that labels the error icon, when icons are not just presentational but used to communicate status.",
          "values": []
        },
        {
          "name": "required",
          "description": "A value is required or must be checked for the form to be submittable.",
          "values": []
        },
        {
          "name": "required-text",
          "description": "Adds additional character to the label when text-area is required.",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "show-remaining-text",
          "description": "Controls whether or not to enable display of remaining character count.",
          "values": []
        },
        {
          "name": "autocomplete",
          "description": "Controls <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\">browser autofill</a> behavior.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-text-area--docs"
        }
      ]
    },
    {
      "name": "saf-text-field",
      "description": "A Text Field Custom HTML Element. Based largely on the {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text | <input type=\"text\" /> element }. Not currently recommended for number input\n---\n\n\n### **Events:**\n - **change** - Fires a custom 'change' event when the value has changed\n\n### **Methods:**\n - **select(): _void_** - Selects all the text in the text field\n\n### **Slots:**\n - **start** - Content which can be provided before the input field\n- **end** - Content which can be provided after the input field\n- _default_ - The default slot for the label\n\n### **CSS Parts:**\n - **label** - The label\n- **control** - The logical control, the element wrapping the input field, including start and end slots\n- **control** - The text field element",
      "attributes": [
        {
          "name": "readonly",
          "description": "When true, the input will be immutable by user interaction.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly | readonly HTML attribute for more information.",
          "values": []
        },
        {
          "name": "autofocus",
          "description": "Indicates that this element should get focus after the page finishes loading.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefautofocus | autofocus HTML attribute\nfor more information.",
          "values": []
        },
        {
          "name": "placeholder",
          "description": "Sets the placeholder value of the element, generally used to provide a hint to the user.",
          "values": []
        },
        {
          "name": "type",
          "description": "Allows setting a type or mode of text.",
          "values": [
            { "name": "email" },
            { "name": "password" },
            { "name": "tel" },
            { "name": "text" },
            { "name": "url" }
          ]
        },
        {
          "name": "list",
          "description": "Allows associating a https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist | datalist\nto the element by https://developer.mozilla.org/en-US/docs/Web/API/Element/id.",
          "values": []
        },
        {
          "name": "maxlength",
          "description": "The maximum number of characters a user can enter.",
          "values": []
        },
        {
          "name": "minlength",
          "description": "The minimum number of characters a user can enter.",
          "values": []
        },
        {
          "name": "pattern",
          "description": "A regular expression that the value must match to pass validation.",
          "values": []
        },
        {
          "name": "size",
          "description": "Sets the width of the element to a specified number of characters.",
          "values": []
        },
        {
          "name": "spellcheck",
          "description": "Controls whether or not to enable spell checking for the input field, or if the default spell checking configuration should be used.",
          "values": []
        },
        {
          "name": "enterkeyhint",
          "description": "defines what action label (or icon) to present for the enter key on virtual keyboards.",
          "values": [
            { "name": "enter" },
            { "name": "done" },
            { "name": "go" },
            { "name": "next" },
            { "name": "previous" },
            { "name": "search" },
            { "name": "send" }
          ]
        },
        {
          "name": "id",
          "description": "unique ID on the input text element",
          "values": []
        },
        {
          "name": "label",
          "description": "Text that describes the input.",
          "values": []
        },
        {
          "name": "invalid",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "values": []
        },
        {
          "name": "validation-message",
          "description": "The message displayed when the control is valid or invalid.",
          "values": []
        },
        {
          "name": "is-success",
          "description": "Specifies that the control is valid and that a success message should display.",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "Provides additional instructional text that provides extra guidance for the input.",
          "values": []
        },
        {
          "name": "optional-text",
          "description": "Provides additional optional text to the label. Accepts any text but intended to indicate `(Required)` or `(Optional)`.",
          "values": []
        },
        {
          "name": "required-text",
          "description": "Adds additional character to the label when text-field is required.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "A description for the input that is only visible to screen readers.",
          "values": []
        },
        {
          "name": "success-aria-label",
          "description": "Defines a string value that labels the success icon, when icons are not just presentational but used to communicate status.",
          "values": []
        },
        {
          "name": "error-aria-label",
          "description": "Defines a string value that labels the error icon, when icons are not just presentational but used to communicate status.",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "autocomplete",
          "description": "Controls <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\">browser autofill</a> behavior. (Ex: `off`, `on`, `name`, `email`)",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-text-field--docs"
        }
      ]
    },
    {
      "name": "saf-toolbar",
      "description": "A class for Toolbar\n---\n",
      "attributes": [
        {
          "name": "aria-label",
          "description": "The aria-label, the unique accessible name for the toolbar",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "arrow-nav",
          "description": "Make the toolbar function as a single interactive UI control with\narrow key navigation",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-toolbar--docs"
        }
      ]
    },
    {
      "name": "saf-tooltip",
      "description": "A class derived from the FASTTooltip foundation component\n---\n\n\n### **Methods:**\n - **setPositioning(): _void_** - Sets the positioning of the tooltip based on the anchor element and the specified placement.",
      "attributes": [
        {
          "name": "anchor",
          "description": "The id of the element the tooltip is anchored to.",
          "values": []
        },
        {
          "name": "trigger-on-click",
          "description": "Specifies whether the tooltip should be triggered on click.",
          "values": []
        },
        {
          "name": "placement",
          "description": "The placement of the tooltip relative to the anchor element.",
          "values": [
            { "name": "top" },
            { "name": "top-start" },
            { "name": "top-end" },
            { "name": "bottom" },
            { "name": "bottom-start" },
            { "name": "bottom-end" },
            { "name": "right" },
            { "name": "left" }
          ]
        },
        {
          "name": "show",
          "description": "The visibility state of the tooltip.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-tooltip--docs"
        }
      ]
    },
    {
      "name": "saf-tree-view",
      "description": "A Tree view Custom HTML Element. Implements the {@link https://w3c.github.io/aria-practices/#TreeView | ARIA TreeView }.\n---\n\n\n### **Slots:**\n - _default_ - The default slot for tree items",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-tree-view--docs"
        }
      ]
    },
    {
      "name": "saf-windows",
      "description": "A class derived from the FASTTab foundation component\n---\n\n\n### **Events:**\n - **change** - Fires a custom 'change' event when a tab is clicked or during keyboard navigation\n\n### **Methods:**\n - **add()** - Emits a custom 'add' event when the window add button is clicked\n- **setTabs(): _void_** - Function that is invoked whenever the selected tab or the tab collection changes.\n- **adjust(adjustment: _number_): _void_** - This method allows the active index to be adjusted programmatically by numerical increments.\n\n### **Slots:**\n - **start** - Content which can be provided before the tablist element\n- **end** - Content which can be provided after the tablist element\n- **tab** - The slot for tabs\n- **tabpanel** - The slot for tabpanels\n\n### **CSS Parts:**\n - **tablist** - The element wrapping for the tabs",
      "attributes": [
        {
          "name": "addable",
          "description": "Indicates whether the windows are addable.",
          "values": []
        },
        {
          "name": "add-aria-label",
          "description": "The accessible label for the add button.",
          "values": []
        },
        {
          "name": "a11y-aria-label",
          "description": "A label that is passed from the component to the `role=\"tablist\"` element.",
          "values": []
        },
        {
          "name": "orientation",
          "description": "Controls the visual orientation of the Tabs list.",
          "values": [{ "name": "Orientation" }]
        },
        {
          "name": "activeid",
          "description": "The id of the active tab",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-windows--docs"
        }
      ]
    },
    {
      "name": "saf-wizard",
      "description": "A class for Wizard\n---\n",
      "attributes": [
        {
          "name": "a11y-aria-label",
          "description": "Define the accessible name of the complementary region of the wizard.",
          "values": []
        },
        {
          "name": "heading-level",
          "description": "Indicates the heading level used for each step title.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-wizard--docs"
        }
      ]
    },
    {
      "name": "saf-workspace-pattern",
      "description": "A class for Workspace Pattern\n---\n",
      "attributes": [
        {
          "name": "sr-only-title",
          "description": "Screen reader title for splitter indicator.",
          "values": []
        },
        {
          "name": "tooltip-text",
          "description": "Tooltip text for splitter.",
          "values": []
        },
        {
          "name": "scrollable-primary",
          "description": "Whether or not primary panel should be scrollable.",
          "values": []
        },
        {
          "name": "scrollable-secondary",
          "description": "Whether or not secondary panel should be scrollable.",
          "values": []
        },
        {
          "name": "initial-size",
          "description": "Initial size for splitter in percentage.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-workspace-pattern--docs"
        }
      ]
    },
    {
      "name": "saf-accordion-item",
      "description": "A class derived from the Accordion foundation component\n---\n",
      "attributes": [
        {
          "name": "heading-level",
          "description": "Configures the https://www.w3.org/TR/wai-aria-1.1/#aria-level | level of the\nheading element.",
          "values": [
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" }
          ]
        },
        {
          "name": "expanded",
          "description": "Expands or collapses the item.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables an accordion item",
          "values": []
        },
        { "name": "id", "description": "The item ID", "values": [] },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "heading-size",
          "description": "Determines whether the heading element should fill the available width or hug its content.",
          "values": [{ "name": "fill" }, { "name": "hug" }]
        },
        {
          "name": "allow-content-propagation",
          "description": "`Deprecated`. Propagation is allowed by default.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-accordion-accordion-item--collapsed"
        }
      ]
    },
    {
      "name": "saf-activity-note",
      "description": "A class for Blank\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-activity-activity-note--activity-note"
        }
      ]
    },
    {
      "name": "saf-breadcrumb-item",
      "description": "A Breadcrumb Item Custom HTML Element.\n---\n\n\n### **Slots:**\n - **start** - Content which can be provided before the breadcrumb content\n- **end** - Content which can be provided after the breadcrumb content\n- _default_ - The default slot for when no href is provided or for providing your own custom elements\n- **separator** - The slot for providing a custom separator\n\n### **CSS Parts:**\n - **listitem** - The wrapping container for the item, represents a semantic listitem\n- **separator** - The wrapping element for the separator\n- **control** - The anchor element\n- **content** - The element wrapping anchor content",
      "attributes": [
        {
          "name": "a11y-aria-description",
          "description": "A description for the anchor that is only visible to screen readers, passed to a hidden span element, connected to the anchor via aria-describedby",
          "values": []
        },
        {
          "name": "transfer-focus",
          "description": "`deprecated`. Handle click events instead.\nTODO: Remove in v4",
          "values": []
        },
        {
          "name": "span",
          "description": "If true, the anchor will be rendered as a span element instead of an anchor element. Useful for integrating with SPA links like `react-router-dom`.",
          "values": []
        },
        {
          "name": "appearance",
          "description": "The appearance style variant of the anchor.",
          "values": [{ "name": "AnchorAppearance" }]
        },
        {
          "name": "density",
          "description": "The density of the anchor when using a CTA appearance.\nOnly applies when appearance is set to a CTA variant.",
          "values": [{ "name": "ComponentDensityWithExtraCompact" }]
        },
        {
          "name": "icon-only",
          "description": "Indicates the anchor should be rendered as icon-only",
          "values": []
        },
        {
          "name": "download",
          "description": "Prompts the user to save the linked URL.",
          "values": []
        },
        {
          "name": "href",
          "description": "The URL the hyperlink references.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element  for more information.",
          "values": []
        },
        {
          "name": "hreflang",
          "description": "Hints at the language of the referenced resource.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a | <a> element  for more information.",
          "values": []
        },
        {
          "name": "ping",
          "description": "A space-separated list of URLs. When the link is followed, the browser will send POST requests with the body PING to the URLs.",
          "values": []
        },
        {
          "name": "referrerpolicy",
          "description": "Determines how much of the referrer to send when following the link.",
          "values": []
        },
        {
          "name": "rel",
          "description": "The relationship of the linked URL as space-separated link types.",
          "values": []
        },
        {
          "name": "target",
          "description": "Determines where a link will open in browsing context.",
          "values": [
            { "name": "_self" },
            { "name": "_blank" },
            { "name": "_parent" },
            { "name": "_top" }
          ]
        },
        {
          "name": "type",
          "description": "Hints at the linked URL's format with a MIME type. No built-in functionality.",
          "values": []
        },
        {
          "name": "a11y-aria-current",
          "description": "Indicates the element that represents the current item within a container or set of related elements.",
          "values": [
            { "name": "" },
            { "name": "page" },
            { "name": "step" },
            { "name": "location" },
            { "name": "date" },
            { "name": "time" },
            { "name": "true" },
            { "name": "false" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-breadcrumb-breadcrumb-item--breadcrumb-items"
        }
      ]
    },
    {
      "name": "saf-checkbox-group",
      "description": "Checkbox Group\n---\n",
      "attributes": [
        {
          "name": "label",
          "description": "Text that describes the checkbox group.",
          "values": []
        },
        {
          "name": "required",
          "description": "Indicates the checkbox group is required.",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "Provides additional instructional text for extra guidance for the checkbox group.",
          "values": []
        },
        {
          "name": "optional-text",
          "description": "Provides additional optional text to the label. Accepts any text but intended to indicate `(Required)` or `(Optional)`.",
          "values": []
        },
        { "name": "disabled", "values": [] },
        {
          "name": "orientation",
          "description": "Controls the visual orientation of the checkbox group.",
          "values": [{ "name": "horizontal" }, { "name": "vertical" }]
        },
        {
          "name": "error-aria-label",
          "description": "Defines a string value that labels the error icon, when icons are not just presentational but used to communicate status.",
          "values": []
        },
        {
          "name": "invalid",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "values": []
        },
        {
          "name": "validation-message",
          "description": "The message displayed when the control is valid or invalid.",
          "values": []
        },
        {
          "name": "required-text",
          "description": "Adds additional character to the label when checkbox-group is required.",
          "values": []
        },
        {
          "name": "required-aria-text",
          "description": "Provides additional ARIA text when the checkbox group is required.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-checkbox-checkbox-group--checkbox-group"
        }
      ]
    },
    {
      "name": "saf-comment-field",
      "description": "A class for Chat\n---\n",
      "attributes": [
        {
          "name": "aria-label",
          "description": "The aria label for the region called comments.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-comment-field--docs"
        }
      ]
    },
    {
      "name": "saf-calendar",
      "description": "A class for Calendar\n---\n\n\n### **Methods:**\n - **getDateDisabled(_date: _Date_): _boolean_** - Bind this function to be able to disable specific dates i.e. disable weekends.",
      "attributes": [
        {
          "name": "weekdays-short",
          "description": "Abbreviated names for weekdays.\nOverride to change the weekdays letters shown in the picker.",
          "values": [{ "name": "string[]" }]
        },
        {
          "name": "weekdays-full",
          "description": "Full names for weekdays.\nOverride to change the weekdays aria-label.",
          "values": [{ "name": "string[]" }]
        },
        {
          "name": "locale",
          "description": "Locale used for calendar.",
          "values": []
        },
        {
          "name": "min-date",
          "description": "Minimum date to select in format \"yyyy-MM-dd\".",
          "values": []
        },
        {
          "name": "max-date",
          "description": "Maximum date to select in format \"yyyy-MM-dd\".",
          "values": []
        },
        {
          "name": "first-day-of-the-week",
          "description": "Determines the day shown at beginning of each row in picker.\nTakes a value from 0 to 6, representing Sunday to Saturday.",
          "values": [{ "name": "DatePickerDayOfWeek" }]
        },
        {
          "name": "default-picker-date",
          "description": "Default picker view month and date to focus in the format \"yyyy-MM-dd\".",
          "values": []
        },
        {
          "name": "format",
          "description": "Default date format. If value is not provided or is invalid, the format will be based on the locale.",
          "values": []
        },
        {
          "name": "selected-date",
          "description": "Denotes the selected date for the picker in the format \"yyyy-MM-dd\".",
          "values": []
        },
        {
          "name": "open",
          "description": "Shows/hides the date picker.",
          "values": []
        },
        {
          "name": "get-date-disabled",
          "description": "Bind this function to be able to disable specific dates i.e. disable weekends.",
          "values": []
        },
        {
          "name": "label",
          "description": "Text that describes the input.",
          "values": []
        },
        {
          "name": "month-select-aria-label",
          "description": "aria-label for the month select dropdown.",
          "values": []
        },
        {
          "name": "date-picker-aria-label",
          "description": "The text appended to the label for the `aria-label` of the dialog.",
          "values": []
        },
        {
          "name": "prev-month-aria-label",
          "description": "aria-label for the previous month icon button.",
          "values": []
        },
        {
          "name": "next-month-aria-label",
          "description": "aria-label for the next month icon button.",
          "values": []
        },
        {
          "name": "year-select-aria-label",
          "description": "aria-label for the year select dropdown.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-calendar--docs"
        }
      ]
    },
    {
      "name": "saf-date-masked-input",
      "description": "A class for DateMaskedInput\n---\n\n\n### **Events:**\n - **change** - Fires a custom 'change' event when the value has changed\n\n### **Methods:**\n - **setValue(value: _string_)** - public function to set the value of the input field\nand also update the sections accordingly\nvalue MUST be a valid date, and must be in the format specified in the format property\n- **select(): _void_** - Selects all the text in the text field\n\n### **Slots:**\n - **start** - Content which can be provided before the input field\n- **end** - Content which can be provided after the input field\n- _default_ - The default slot for the label\n\n### **CSS Parts:**\n - **label** - The label\n- **control** - The logical control, the element wrapping the input field, including start and end slots",
      "attributes": [
        {
          "name": "min-date",
          "description": "Minimum selectable date. Defaults to 'yyyy-MM-dd' format unless a custom format is specified using the 'format' attribute.",
          "values": []
        },
        {
          "name": "autocorrect",
          "description": "Determines whether the component automatically corrects invalid dates",
          "values": []
        },
        {
          "name": "max-date",
          "description": "Maximum selectable date. Defaults to 'yyyy-MM-dd' format unless a custom format is specified using the 'format' attribute.",
          "values": []
        },
        {
          "name": "format",
          "description": "Default date format. If value is not provided or is invalid, the format will be based on the locale.",
          "values": []
        },
        {
          "name": "readonly",
          "description": "When true, the input will be immutable by user interaction.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly | readonly HTML attribute for more information.",
          "values": []
        },
        {
          "name": "autofocus",
          "description": "Indicates that this element should get focus after the page finishes loading.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefautofocus | autofocus HTML attribute\nfor more information.",
          "values": []
        },
        {
          "name": "placeholder",
          "description": "Sets the placeholder value of the element, generally used to provide a hint to the user.",
          "values": []
        },
        {
          "name": "type",
          "description": "Allows setting a type or mode of text.",
          "values": [
            { "name": "email" },
            { "name": "password" },
            { "name": "tel" },
            { "name": "text" },
            { "name": "url" }
          ]
        },
        {
          "name": "list",
          "description": "Allows associating a https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist | datalist\nto the element by https://developer.mozilla.org/en-US/docs/Web/API/Element/id.",
          "values": []
        },
        {
          "name": "pattern",
          "description": "A regular expression that the value must match to pass validation.",
          "values": []
        },
        {
          "name": "enterkeyhint",
          "description": "defines what action label (or icon) to present for the enter key on virtual keyboards.",
          "values": [
            { "name": "enter" },
            { "name": "done" },
            { "name": "go" },
            { "name": "next" },
            { "name": "previous" },
            { "name": "search" },
            { "name": "send" }
          ]
        },
        {
          "name": "id",
          "description": "unique ID on the input text element",
          "values": []
        },
        {
          "name": "label",
          "description": "Text that describes the input.",
          "values": []
        },
        {
          "name": "invalid",
          "description": "Indicates the entered value does not conform to the format expected by the application.",
          "values": []
        },
        {
          "name": "validation-message",
          "description": "The message displayed when the control is valid or invalid.",
          "values": []
        },
        {
          "name": "is-success",
          "description": "Specifies that the control is valid and that a success message should display.",
          "values": []
        },
        {
          "name": "instructional-text",
          "description": "Provides additional instructional text that provides extra guidance for the input.",
          "values": []
        },
        {
          "name": "optional-text",
          "description": "Provides additional optional text to the label. Accepts any text but intended to indicate `(Required)` or `(Optional)`.",
          "values": []
        },
        {
          "name": "required-text",
          "description": "Adds additional character to the label when text-field is required.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "A description for the input that is only visible to screen readers.",
          "values": []
        },
        {
          "name": "success-aria-label",
          "description": "Defines a string value that labels the success icon, when icons are not just presentational but used to communicate status.",
          "values": []
        },
        {
          "name": "error-aria-label",
          "description": "Defines a string value that labels the error icon, when icons are not just presentational but used to communicate status.",
          "values": []
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        },
        {
          "name": "autocomplete",
          "description": "Controls <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\">browser autofill</a> behavior. (Ex: `off`, `on`, `name`, `email`)",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-date-masked-input--docs"
        }
      ]
    },
    {
      "name": "saf-description-details",
      "description": "A class derived from the FASTElement foundation component\n---\n",
      "attributes": [
        {
          "name": "bullet-point",
          "description": "Determine if the bullets are going to be displayed or not.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-description-details--docs"
        }
      ]
    },
    {
      "name": "saf-description-term",
      "description": "A class derived from the FASTElement foundation component\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-description-term--docs"
        }
      ]
    },
    {
      "name": "saf-facet-category",
      "description": "\n---\n",
      "attributes": [
        {
          "name": "summary",
          "description": "The label of the disclosure button representing the facet category.",
          "values": []
        },
        {
          "name": "expanded",
          "description": "\nWhether the disclosure is expanded or not.",
          "values": []
        },
        {
          "name": "hide-caret",
          "description": "Option to hide caret if is not required.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-facet-category--docs"
        }
      ]
    },
    {
      "name": "saf-facet-item",
      "description": "\n---\n\n\n### **Methods:**\n - **toggleExpand(e: _MouseEvent_): _void_** - Toggles expand and collapsing on a parent facet with children facets",
      "attributes": [
        {
          "name": "facet-name",
          "description": "The name of the facet item. This is used to label the checkbox.",
          "values": []
        },
        {
          "name": "indeterminate",
          "description": "The indeterminate state of the facet item",
          "values": []
        },
        {
          "name": "item-count",
          "description": "The number of items in the facet.",
          "values": []
        },
        {
          "name": "checked",
          "description": "Whether the facet item is checked.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Whether the facet item is disabled.",
          "values": []
        },
        {
          "name": "expanded",
          "description": "Whether the facet item is expanded.",
          "values": []
        },
        {
          "name": "expand-aria-label",
          "description": "The aria-label for the expand button.",
          "values": []
        },
        {
          "name": "collapse-aria-label",
          "description": "The aria-label for the collapse button.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-faceted-filter-facet-item--collapsed"
        }
      ]
    },
    {
      "name": "saf-layout-grid-item",
      "description": "\n---\n",
      "attributes": [
        {
          "name": "auto-height",
          "description": "Auto height for the grid-item to allow it to grow to the tallest grid-item in the row.",
          "values": []
        },
        {
          "name": "justify-content",
          "description": "Justify the grid-item horizontally. Styling default is `start`.",
          "values": [
            { "name": "start" },
            { "name": "center" },
            { "name": "end" }
          ]
        },
        {
          "name": "xs",
          "description": "The number of columns the grid column should span at the `xs` breakpoint",
          "values": [
            { "name": "0" },
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" },
            { "name": "7" },
            { "name": "8" },
            { "name": "9" },
            { "name": "10" },
            { "name": "11" },
            { "name": "12" },
            { "name": "undefined" },
            { "name": "auto" },
            { "name": "fit" }
          ]
        },
        {
          "name": "sm",
          "description": "The number of columns the grid column should span at the `sm` breakpoint",
          "values": [
            { "name": "0" },
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" },
            { "name": "7" },
            { "name": "8" },
            { "name": "9" },
            { "name": "10" },
            { "name": "11" },
            { "name": "12" },
            { "name": "undefined" },
            { "name": "auto" },
            { "name": "fit" }
          ]
        },
        {
          "name": "md",
          "description": "The number of columns the grid column should span at the `md` breakpoint",
          "values": [
            { "name": "0" },
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" },
            { "name": "7" },
            { "name": "8" },
            { "name": "9" },
            { "name": "10" },
            { "name": "11" },
            { "name": "12" },
            { "name": "undefined" },
            { "name": "auto" },
            { "name": "fit" }
          ]
        },
        {
          "name": "lg",
          "description": "The number of columns the grid column should span at the `lg` breakpoint",
          "values": [
            { "name": "0" },
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" },
            { "name": "7" },
            { "name": "8" },
            { "name": "9" },
            { "name": "10" },
            { "name": "11" },
            { "name": "12" },
            { "name": "undefined" },
            { "name": "auto" },
            { "name": "fit" }
          ]
        },
        {
          "name": "xl",
          "description": "The number of columns the grid column should span at the `xl` breakpoint",
          "values": [
            { "name": "0" },
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" },
            { "name": "7" },
            { "name": "8" },
            { "name": "9" },
            { "name": "10" },
            { "name": "11" },
            { "name": "12" },
            { "name": "undefined" },
            { "name": "auto" },
            { "name": "fit" }
          ]
        },
        {
          "name": "xxl",
          "description": "The number of columns the grid column should span at the `xxl` breakpoint",
          "values": [
            { "name": "0" },
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" },
            { "name": "7" },
            { "name": "8" },
            { "name": "9" },
            { "name": "10" },
            { "name": "11" },
            { "name": "12" },
            { "name": "undefined" },
            { "name": "auto" },
            { "name": "fit" }
          ]
        },
        {
          "name": "xxxl",
          "description": "The number of columns the grid column should span at the `xxxl` breakpoint",
          "values": [
            { "name": "0" },
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" },
            { "name": "7" },
            { "name": "8" },
            { "name": "9" },
            { "name": "10" },
            { "name": "11" },
            { "name": "12" },
            { "name": "undefined" },
            { "name": "auto" },
            { "name": "fit" }
          ]
        },
        {
          "name": "xxxxl",
          "description": "The number of columns the grid column should span at the `xxxxl` breakpoint",
          "values": [
            { "name": "0" },
            { "name": "1" },
            { "name": "2" },
            { "name": "3" },
            { "name": "4" },
            { "name": "5" },
            { "name": "6" },
            { "name": "7" },
            { "name": "8" },
            { "name": "9" },
            { "name": "10" },
            { "name": "11" },
            { "name": "12" },
            { "name": "undefined" },
            { "name": "auto" },
            { "name": "fit" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-layout-grid-item--docs"
        }
      ]
    },
    {
      "name": "saf-list-item",
      "description": "List item\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-list-list-item--overview"
        }
      ]
    },
    {
      "name": "saf-menu-item",
      "description": "A Switch Custom HTML Element. Implements {@link https://www.w3.org/TR/wai-aria-1.1/#menuitem | ARIA menuitem }, {@link https://www.w3.org/TR/wai-aria-1.1/#menuitemcheckbox | ARIA menuitemcheckbox}, or {@link https://www.w3.org/TR/wai-aria-1.1/#menuitemradio | ARIA menuitemradio }.\n---\n\n\n### **Events:**\n - **expanded-change** - Fires a custom 'expanded-change' event when the expanded state changes\n- **change** - Fires a custom 'change' event when a non-submenu item with a role of `menuitemcheckbox`, `menuitemradio`, or `menuitem` is invoked\n\n### **Methods:**\n \n- **updateSubmenu()** - Calculate and apply submenu positioning.\n\n### **Slots:**\n - **checked-indicator** - The checked indicator\n- **radio-indicator** - The radio indicator\n- **start** - Content which can be provided before the menu item content\n- **end** - Content which can be provided after the menu item content\n- _default_ - The default slot for menu item content\n- **expand-collapse-indicator** - The expand/collapse indicator\n- **submenu** - Used to nest menu's within menu items\n\n### **CSS Parts:**\n - **input-container** - The element representing the visual checked or radio indicator\n- **checkbox** - The element wrapping the `menuitemcheckbox` indicator\n- **radio** - The element wrapping the `menuitemradio` indicator\n- **content** - The element wrapping the menu item content\n- **expand-collapse-glyph-container** - The element wrapping the expand collapse element\n- **expand-collapse** - The expand/collapse element\n- **submenu-region** - The container for the submenu, used for positioning",
      "attributes": [
        { "name": "id", "values": [] },
        {
          "name": "disabled",
          "description": "The disabled state of the element.",
          "values": []
        },
        {
          "name": "expanded",
          "description": "The expanded state of the element.",
          "values": []
        },
        {
          "name": "role",
          "description": "The role of the element.",
          "values": [
            { "name": "menuitem" },
            { "name": "menuitemcheckbox" },
            { "name": "menuitemradio" }
          ]
        },
        {
          "name": "checked",
          "description": "The checked value of the element.",
          "values": []
        },
        {
          "name": "hidden",
          "description": "`Deprecated`. Doesn't do anything. Will be removed in v4.",
          "values": []
        },
        {
          "name": "url",
          "description": "The URL the hyperlink references.",
          "values": []
        },
        {
          "name": "has-link",
          "description": "Whether the menu-item is a link. Typically used in side nav.\nWhen `true`, the menu-item will render an anchor tag. Provide a `url` that the anchor tag should link to.",
          "values": []
        },
        {
          "name": "router-link",
          "description": "Indicates whether the menu-item is used as a router link.\nWhen `true`, the menu-item will render an anchor tag but when invoked, it will invoke the `navigate` method.\nYou need to provide a `url` and `navigate()` method for the router link to work.",
          "values": []
        },
        {
          "name": "link-target",
          "description": "Determines where a link will open in browsing context.",
          "values": [
            { "name": "_self" },
            { "name": "_blank" },
            { "name": "_parent" },
            { "name": "_top" }
          ]
        },
        {
          "name": "density",
          "description": "Used to change the spacing in and around the component.",
          "values": [
            { "name": "compact" },
            { "name": "standard" },
            { "name": "inherit" }
          ]
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-menu-menu-item--menu-item"
        }
      ]
    },
    {
      "name": "saf-metadata-item",
      "description": "A class for Metadata item, based on concepts in FASTBreadcrumbItem\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-metadata-metadata-item--metadata-items"
        }
      ]
    },
    {
      "name": "saf-product-header-item",
      "description": "A class for ProductHeaderItem\n---\n",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-product-header-item--docs"
        }
      ]
    },
    {
      "name": "saf-radio",
      "description": "A Radio Custom HTML Element. Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#radio | ARIA radio }.\n---\n\n\n### **Events:**\n - **change** - Emits a custom change event when the checked state changes\n\n### **Methods:**\n - **keypressHandler(e: _KeyboardEvent_): _boolean | void_** - Handles key presses on the radio.\n\n### **Slots:**\n - **checked-indicator** - The checked indicator\n- _default_ - The default slot for the label\n\n### **CSS Parts:**\n - **control** - The element representing the visual radio control\n- **label** - The label",
      "attributes": [
        {
          "name": "readonly",
          "description": "When set to `true`, the radio button cannot be interacted with by the user.",
          "values": []
        },
        {
          "name": "id",
          "description": "Pass through the input element.",
          "values": []
        },
        {
          "name": "a11y-aria-description",
          "description": "Pass through for a div that adds additional information for the button, which uses aria-describedby to associate the two",
          "values": []
        },
        {
          "name": "a11y-aria-label",
          "description": "attr for passing aria-label to the radio input without also being applied to the component element",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-radio--docs"
        }
      ]
    },
    {
      "name": "saf-slider-label",
      "description": "A label element intended to be used with the {@link @saffron/core-components#(Slider:class)} component.\n---\n\n\n### **Slots:**\n - _default_ - The default slot for the label content\n\n### **CSS Parts:**\n - **container** - The element wrapping the label mark and content\n- **mark** - The element wrapping the label mark\n- **content** - The element wrapping the label content",
      "attributes": [
        {
          "name": "position",
          "description": "The position of the label relative to the min and max value of the parent Slider.",
          "values": []
        },
        {
          "name": "hide-mark",
          "description": "Hides the tick mark.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "The disabled state of the label. This is generally controlled by the parent Slider.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-slider-slider-label--docs"
        }
      ]
    },
    {
      "name": "saf-step",
      "description": "\n---\n",
      "attributes": [
        {
          "name": "status",
          "description": "The status of the step.",
          "values": [
            { "name": "active" },
            { "name": "completed" },
            { "name": "inactive" }
          ]
        },
        {
          "name": "status-label",
          "description": "status label of the step to be used for assistive technologies.",
          "values": []
        },
        {
          "name": "step-title",
          "description": "The title of the step.",
          "values": []
        },
        {
          "name": "step-number",
          "description": "The step number.",
          "values": []
        },
        {
          "name": "total-steps",
          "description": "The total number of steps.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-stepper-step--overview"
        }
      ]
    },
    {
      "name": "saf-tab",
      "description": "A Tab Component to be used with {@link @saffron/core-components#(FASTTabs:class)}\n---\n\n\n### **Slots:**\n - **start** - Content which can be provided before the tab content\n- **end** - Content which can be provided after the tab content\n- _default_ - The default slot for the tab content",
      "attributes": [
        {
          "name": "disabled",
          "description": "When true, the control will be immutable by user interaction.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled | disabled HTML attribute for more information.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-tabs-tab--overview"
        }
      ]
    },
    {
      "name": "saf-tab-panel",
      "description": "A TabPanel Component to be used with {@link @saffron/core-components#(Tabs:class)}\n---\n\n\n### **Slots:**\n - _default_ - The default slot for the tabpanel content",
      "attributes": [],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-tab-panel--docs"
        }
      ]
    },
    {
      "name": "saf-tree-item",
      "description": "A Tree item Custom HTML Element.\n---\n\n\n### **Events:**\n - **expanded-change** - Fires a custom 'expanded-change' event when the expanded state changes\n- **selected-change** - Fires a custom 'selected-change' event when the selected state changes\n\n### **Methods:**\n - **focusItem(el: _HTMLElement_)** - Places document focus on a tree item\n\n### **Slots:**\n - **start** - Content which can be provided before the tree item content\n- **end** - Content which can be provided after the tree item content\n- _default_ - The default slot for tree item text content\n- **item** - The slot for tree items (fast tree items manage this assignment themselves)\n- **expand-collapse-button** - The expand/collapse button\n\n### **CSS Parts:**\n - **positioning-region** - The element used to position the tree item content with exception of any child nodes\n- **content-region** - The element containing the expand/collapse, start, and end slots\n- **items** - The element wrapping any child items\n- **expand-collapse-button** - The expand/collapse button",
      "attributes": [
        {
          "name": "expanded",
          "description": "When true, the control will be appear expanded by user interaction.",
          "values": []
        },
        {
          "name": "selected",
          "description": "When true, the control will appear selected by user interaction.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "When true, the control will be immutable by user interaction.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled | disabled HTML attribute for more information.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-tree-view-tree-item--default"
        }
      ]
    },
    {
      "name": "saf-window",
      "description": "A class derived from the Tab foundation component\n---\n\n\n### **Methods:**\n - **close()** - Emits a custom 'close' event when the window close button is clicked\n\n### **Slots:**\n - **start** - Content which can be provided before the tab content\n- **end** - Content which can be provided after the tab content\n- _default_ - The default slot for the tab content",
      "attributes": [
        {
          "name": "close-aria-label",
          "description": "The accessible label for the close button.",
          "values": []
        },
        {
          "name": "closeable",
          "description": "Indicates whether the window has close button.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "When true, the control will be immutable by user interaction.\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled | disabled HTML attribute for more information.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-windows-window--overview"
        }
      ]
    },
    {
      "name": "saf-window-panel",
      "description": "A class derived from the Tab Panel foundation component\n---\n\n\n### **Slots:**\n - _default_ - The default slot for the tabpanel content",
      "attributes": [
        {
          "name": "is-full-width",
          "description": "Determines whether panel is full-width without padding.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-window-panel--docs"
        }
      ]
    },
    {
      "name": "saf-wizard-step-content",
      "description": "A class for WizardStepContent\n---\n",
      "attributes": [
        {
          "name": "step",
          "description": "Denotes the step number of the wizard step",
          "values": []
        },
        {
          "name": "hidden",
          "description": "Denotes the hidden state of the wizard step",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Storybook",
          "url": "https://saffron.thomsonreuters.com/?path=/docs/components-wizard-step-content--docs"
        }
      ]
    }
  ]
}
